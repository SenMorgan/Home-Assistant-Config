######################################################################
# File: dcc-ex.yaml                                                  #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2024-01-21                                                   #
#                                                                    #
# Info: this file contains entities that are associated to the       #
# DCC-EX protocol and my model railway layout.                       #
# More info about DCC-EX API:                                        #
# https://dcc-ex.com/reference/developers/api.html#gsc.tab=0         #
#                                                                    #
# Copyright (c) 2024 Sen Morgan                                      #
######################################################################

###############################################
## SETTINGS AND VARIABLES
###############################################
homeassistant:
  customize:
    package.node_anchors:
      defaults: &defaults
        resource: !secret DCC-EX-SERVER-IP
        port: !secret DCC-EX-SERVER-PORT
        timeout: &telnet_cmd_timeout 0.2

###############################################
## INPUT BUTTONS
###############################################
input_button:
  dcc_ex_emergency_stop:
    name: "DCC-EX Emergency Stop"
    icon: mdi:alert
  dcc_ex_reboot:
    name: "DCC-EX Reboot"
    icon: mdi:restart
  dcc_ex_default_volume:
    name: "DCC-EX Default Volume"
    icon: mdi:volume-medium
  dcc_ex_max_volume:
    name: "DCC-EX Max Volume"
    icon: mdi:volume-high
  dcc_ex_route_300:
    name: "DCC-EX Route 300"
    icon: mdi:railroad-light
  dcc_ex_route_301:
    name: "DCC-EX Route 301"
    icon: mdi:railroad-light

###############################################
## LIGHTS
###############################################
light:
  - platform: switch
    name: "Model Railway Lights"
    entity_id: switch.dcc_ex_pwr

###############################################
## SHELL COMMANDS
###############################################
shell_command:
  dcc_ex_command: >-
    /config/scripts/dcc_ex_command.sh
    -c '{{ command_type }}'
    -v '{{ command_value }}'
    -a '{{ dcc_ex_server_ip }}'
    -p '{{ dcc_ex_server_port }}'

###############################################
## MEDIA PLAYER - Used for easier control of volume, power, etc.
###############################################
media_player:
  - platform: universal
    name: "Model Railway"
    commands:
      turn_on:
        action: switch.turn_on
        entity_id: switch.dcc_ex_pwr
      turn_off:
        action: switch.turn_off
        entity_id: switch.dcc_ex_pwr
      volume_up:
        action: input_button.press
        entity_id: input_button.dcc_ex_max_volume
      volume_down:
        action: input_button.press
        entity_id: input_button.dcc_ex_default_volume
      volume_set:
        service: shell_command.dcc_ex_command
        data:
          command_type: "volume"
          command_value: "{{ volume_level }}"
          dcc_ex_server_ip: !secret DCC-EX-SERVER-IP
          dcc_ex_server_port: !secret DCC-EX-SERVER-PORT
      media_play:
        action: switch.turn_on
        entity_id: input_button.dcc_ex_pause
      media_pause:
        action: switch.turn_off
        entity_id: input_button.dcc_ex_pause
    attributes:
      state: switch.dcc_ex_pwr
    device_class: speaker

###############################################
## SWITCHES
###############################################
switch:
  - platform: telnet
    switches:
      ###############################################
      ## FUNCTIONS
      ###############################################
      dcc_ex_pwr:
        <<: *defaults
        name: "DCC-EX Power and Loco Lights"
        # Power all tracks, enable loco's lights (outdoor + interior), set max volume
        command_on: "<1> <F 4 0 1> <F 5 0 1> <F 4 15 1> <W 4 63 64>"
        # Power off all tracks
        command_off: "<0>"
        command_state: "<s>"
        value_template: "{{ value.find('<p1 MAIN>') != -1 }}"
      dcc_ex_engine_sound:
        <<: *defaults
        name: "DCC-EX Vossloh Engine Sound"
        # Enable engine sound on Loco #4
        command_on: "<F 4 1 1>"
        # Disable engine sound
        command_off: "<F 4 1 0>"
      dcc_ex_horn:
        <<: *defaults
        name: "DCC-EX Horn"
        # Horn on Loco #4 (both LOW and HIGH horns)
        command_on: "<1> <F 4 2 1> <F 4 3 1>"
        # Horn off
        command_off: "<F 4 2 0> <F 4 3 0>"
      dcc_ex_pause:
        <<: *defaults
        name: "DCC-EX Pause"
        # Pause all locos
        command_on: "</ PAUSE>"
        command_off: "</ RESUME>"
      dcc_ex_emergency_stop_cmd:
        <<: *defaults
        name: "DCC-EX Emergency Stop Command"
        # Emergency stop all locos (without disabling power)
        command_on: "<!>"
        command_off: ""
      dcc_ex_reboot_cmd:
        <<: *defaults
        name: "DCC-EX Reboot Command"
        # Reboot DCC-EX server
        command_on: "<D RESET>"
        command_off: ""
      dcc_ex_default_volume_cmd:
        <<: *defaults
        name: "DCC-EX Default Volume Command"
        # Set default volume to ~31%
        command_on: "<w 4 63 20>"
        command_off: ""
      dcc_ex_max_volume_cmd:
        <<: *defaults
        name: "DCC-EX Max Volume Command"
        # Set max volume to 100%
        command_on: "<w 4 63 64>"
        command_off: ""
      dcc_ex_cabin_lights:
        <<: *defaults
        name: "DCC-EX Cabin Lights"
        # Enable cabin lights on Loco #4
        command_on: "<F 4 15 1>"
        command_off: "<F 4 15 0>"

      ###############################################
      ## ROUTES (AUTOMATIONS)
      ###############################################
      dcc_ex_route_300_cmd:
        name: "DCC-EX Route 300 Command"
        resource: !secret DCC-EX-SERVER-IP
        port: !secret DCC-EX-SERVER-PORT
        command_on: "</ START 300>"
        command_off: ""
        timeout: *telnet_cmd_timeout
      dcc_ex_route_301_cmd:
        name: "DCC-EX Route 301 Command"
        resource: !secret DCC-EX-SERVER-IP
        port: !secret DCC-EX-SERVER-PORT
        command_on: "</ START 301>"
        command_off: ""
        timeout: *telnet_cmd_timeout

###############################################
## AUTOMATIONS
###############################################
automation:
  # Enable switches based on button presses
  - alias: "DCC-EX Handle Button Presses"
    id: dcc_ex_handle_button_presses
    variables:
      button_switch_map:
        input_button.dcc_ex_emergency_stop: switch.dcc_ex_emergency_stop_cmd
        input_button.dcc_ex_reboot: switch.dcc_ex_reboot_cmd
        input_button.dcc_ex_default_volume: switch.dcc_ex_default_volume_cmd
        input_button.dcc_ex_max_volume: switch.dcc_ex_max_volume_cmd
        input_button.dcc_ex_route_300: switch.dcc_ex_route_300_cmd
        input_button.dcc_ex_route_301: switch.dcc_ex_route_301_cmd
    triggers:
      - trigger: state
        entity_id:
          - input_button.dcc_ex_emergency_stop
          - input_button.dcc_ex_reboot
          - input_button.dcc_ex_default_volume
          - input_button.dcc_ex_max_volume
          - input_button.dcc_ex_route_300
          - input_button.dcc_ex_route_301
    actions:
      - action: switch.turn_on
        data:
          entity_id: "{{ button_switch_map[trigger.entity_id] }}"

  # Disable command switches after 1 second
  - alias: "DCC-EX Disable Command Switches"
    id: dcc_ex_disable_command_switches
    triggers:
      - trigger: state
        entity_id:
          - switch.dcc_ex_emergency_stop_cmd
          - switch.dcc_ex_reboot_cmd
          - switch.dcc_ex_default_volume_cmd
          - switch.dcc_ex_max_volume_cmd
          - switch.dcc_ex_route_300_cmd
          - switch.dcc_ex_route_301_cmd
        to: "on"
        for: "00:00:01"
    variables:
      switch_entity: "{{ trigger.entity_id }}"
    actions:
      - action: switch.turn_off
        target:
          entity_id: "{{ switch_entity }}"

  - alias: "DCC-EX Enable Power on Sunset"
    id: dcc_ex_enable_power_on_sunset
    triggers:
      - trigger: sun
        event: sunset
    conditions:
      - condition: state
        entity_id: binary_sensor.people_home
        state: "on"
    actions:
      - action: switch.turn_on
        target:
          entity_id: switch.dcc_ex_pwr

  # Turn on Locomotive cabin lights on motion
  - alias: "DCC-EX Cabin Lights on Motion"
    id: dcc_ex_cabin_lights_on_motion
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: binary_sensor.kitchen_motion_alarm
    conditions:
      - condition: state
        entity_id: switch.dcc_ex_pwr
        state: "on"
      - condition: template
        value_template: "{{ trigger.to_state.state in ['on', 'off'] }}"
    actions:
      - action: switch.turn_{{ "on" if trigger.to_state.state == "on" else "off" }}
        entity_id: switch.dcc_ex_cabin_lights
