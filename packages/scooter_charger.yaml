######################################################################
# File: scooter_charger.yaml                                         #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2023-08-14                                                   #
#                                                                    #                                                                    #
# Copyright (c) 2023 Sen Morgan                                      #            #
#                                                                    #
######################################################################

###############################################
## INPUT BOOLEANS
###############################################
input_boolean:
  scooter_charger:
    name: Scooter Charger
    icon: mdi:scooter-electric

###############################################
## INPUT NUMBERS
###############################################
input_number:
  scooter_charger_energy_start:
    name: Scooter Charger Energy Start
    min: 0.0
    max: 100000.0
    step: 0.001
    unit_of_measurement: kWh
    icon: mdi:scooter-electric

###############################################
## INPUT DATETIMES
###############################################
input_datetime:
  scooter_charger_energy_start_time:
    name: Scooter Charger Energy Start Time
    has_date: true
    has_time: true

###############################################
## SENSORS
###############################################
sensor:
  - platform: template
    sensors:
      scooter_charger_energy_consumed:
        friendly_name: "Scooter Charger Energy Consumed"
        unit_of_measurement: "Wh"
        value_template: >
          {{ ((states('sensor.scooter_charger_summation_delivered') | float(0) -
            states('input_number.scooter_charger_energy_start') | float(0)) * 1000) | round }}

###############################################
## SCRIPTS
###############################################
script:
  scooter_charger_energy_consumed_notify:
    alias: Scooter Charger Energy Consumed Speak
    sequence:
      - variables:
          energy_consumed: "{{ states('sensor.scooter_charger_energy_consumed') }}"
          energy_time: "{{ ((as_timestamp(now()) - as_timestamp(states('input_datetime.scooter_charger_energy_start_time'))) / 60) | round }}"
      # Notify via mobile app and create persistent notification
      - action: script.notify_and_create_persistent_notification
        data:
          title: 🛴 Зарядка самоката окончена
          message: Заряжено {{ energy_consumed }} Втч за {{ energy_time }} минут
      # Play message on yandex station
      - action: media_player.play_media
        entity_id: media_player.yandex_station_midi
        data:
          media_content_id: >
            Зарядка электросамоката окончена. Заряжено {{ energy_consumed }} Ватт-часов за {{ energy_time }} минут
          media_content_type: text

###############################################
## AUTOMATIONS
###############################################
automation:
  # When input_boolean.scooter_charger is on - enable charger
  - alias: Scooter Charger Enable
    id: "scooter_charger_enable"
    mode: restart
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: input_boolean.scooter_charger
        to: "on"
    actions:
      - action: switch.turn_on
        entity_id: switch.scooter_charger_socket
      - action: automation.turn_on
        entity_id: automation.scooter_charger_disable_when_idle
      # Save current energy consumption
      - action: input_number.set_value
        data:
          entity_id: input_number.scooter_charger_energy_start
          value: "{{ states('sensor.scooter_charger_summation_delivered') | float(0) }}"
      # Save current time
      - action: input_datetime.set_datetime
        data:
          entity_id: input_datetime.scooter_charger_energy_start_time
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

  # When input_boolean.scooter_charger is off - disable charger
  - alias: Scooter Charger Disable
    id: "scooter_charger_disable"
    mode: restart
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: input_boolean.scooter_charger
        to: "off"
    actions:
      - action: switch.turn_off
        entity_id: switch.scooter_charger_socket
      - if:
          - condition: template
            value_template: "{{ states('sensor.scooter_charger_energy_consumed') | float(0) > 0 }}"
        then:
          - action: script.turn_on
            entity_id: script.scooter_charger_energy_consumed_notify
      - action: automation.turn_off
        entity_id: automation.scooter_charger_disable_when_idle

  # When Scooter Charger Consumption is lower than 15W for 10 minutes - disable charger
  - alias: Scooter Charger Disable When Idle
    id: "scooter_charger_disable_when_idle"
    mode: restart
    max_exceeded: silent
    triggers:
      - trigger: numeric_state
        entity_id: sensor.scooter_charger_active_power
        below: 15
        for:
          minutes: 10
    actions:
      - action: switch.turn_off
        entity_id: switch.scooter_charger_socket
      - action: input_boolean.turn_off
        entity_id: input_boolean.scooter_charger
      - if:
          - condition: template
            value_template: "{{ states('sensor.scooter_charger_energy_consumed') | float(0) > 0 }}"
        then:
          - action: script.turn_on
            entity_id: script.scooter_charger_energy_consumed_notify
      - action: automation.turn_off
        entity_id: automation.scooter_charger_disable_when_idle
