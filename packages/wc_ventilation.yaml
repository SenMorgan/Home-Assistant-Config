######################################################################
# File: wc_ventilation.yaml                                          #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2023-05-11                                                   #
#                                                                    #                                                                    #
# Copyright (c) 2023 Sen Morgan                                      #
######################################################################

###############################################
## INPUT BOOLEANS
###############################################
input_boolean:
  wc_occupied:
    name: WC Occupied
    icon: mdi:toilet

###############################################
## INPUT SELECTS
###############################################
input_select:
  wc_ventilation_state:
    name: WC Ventilation State
    options:
      - NONE
      - MANUAL_ON
      - MANUAL_OFF
      - TOILET_ON
      - HUMIDITY_ON
      - HUMIDITY_OFF
      - TIMEOUT
      - EMERGENCY
    initial: NONE
    icon: mdi:fan

# Read only sensor to not allow to change the input_select value from UI
sensor:
  - platform: template
    sensors:
      wc_ventilation_state_ro:
        friendly_name: WC Ventilation State RO
        value_template: "{{ states('input_select.wc_ventilation_state') | replace('_', ' ') }}"

###############################################
## TIMERS
###############################################
timer:
  wc_ventilation:
    name: WC Ventilation Timer
    icon: mdi:fan-clock
    restore: true
  wc_wait_for_open_to_ventilate:
    name: WC Wait for Open to Ventilate
    icon: mdi:fan-clock
    restore: true

###############################################
## INPUT NUMBERS
###############################################
input_number:
  wc_consider_occupied_after_seconds:
    name: WC Consider Occupied After Seconds
    min: 0
    max: 60
    step: 1.0
  wc_consider_unoccupied_after_seconds:
    name: WC Consider Unoccupied After Seconds
    min: 0
    max: 60
    step: 1.0
  wc_ventilate_for_minutes_after_manual_trigger:
    name: WC Ventilate for Minutes After Manual Trigger
    min: 0
    max: 30
    step: 1.0
  wc_consider_ventilate_when_finished_if_occupied_for_seconds:
    name: WC Ventilate When Finished If Occupied For Seconds
    min: 0
    max: 360
    step: 1.0
  wc_ventilate_for_minutes_when_finished:
    name: WC Ventilate for Minutes When Finished
    min: 0
    max: 30
    step: 1.0
  wc_wait_for_opening_after_considered_to_ventilate_minutes:
    name: WC Wait for Opening After Considered to Ventilate Minutes
    min: 0
    max: 60
    step: 1.0
  wc_ventilation_start_humidity_threshold:
    name: WC Ventilation Start Humidity Threshold
    min: 50
    max: 100
    step: 1.0
  wc_ventilation_stop_humidity_threshold:
    name: WC Ventilation Stop Humidity Threshold
    min: 30
    max: 90
    step: 1.0
  wc_max_ventilation_duration_minutes:
    name: WC Max Ventilation Duration Minutes
    min: 0
    max: 60
    step: 1.0
    initial: 60.0

###############################################
## AUTOMATIONS
###############################################
automation:
  - alias: WC Accupancy Set
    id: wc_accupancy_set
    triggers:
      - trigger: state
        entity_id: binary_sensor.wc_door_contact
        from: "on"
        to: "off"
        for:
          seconds: "{{ states('input_number.wc_consider_occupied_after_seconds') | default(0) | float(0) }}"
    conditions:
      - condition: state
        entity_id: input_boolean.wc_occupied
        state: "off"
    actions:
      - action: input_boolean.turn_on
        entity_id: input_boolean.wc_occupied

  - alias: WC Accupancy Reset
    id: wc_accupancy_reset
    triggers:
      - trigger: state
        entity_id: binary_sensor.wc_door_contact
        from: "off"
        to: "on"
        for:
          seconds: "{{ states('input_number.wc_consider_unoccupied_after_seconds') | default(0) | float(0) }}"
    conditions:
      - condition: state
        entity_id: input_boolean.wc_occupied
        state: "on"
    actions:
      - action: input_boolean.turn_off
        entity_id: input_boolean.wc_occupied

  - alias: WC Ventilation Start Timer Manually
    id: wc_ventilation_start_timer_manually
    triggers:
      - trigger: state
        entity_id: fan.wc_and_bathroom
        from: "off"
        to: "on"
    conditions:
      # Run that only if new timer finish time is greater than the current one or if timer is inactive
      - condition: template
        value_template:
          "{{ ((now() + timedelta(minutes=states('input_number.wc_ventilate_for_minutes_after_manual_trigger') | default(0) | float(0))).timestamp() >
          as_timestamp(state_attr('timer.wc_ventilation', 'finishes_at'), 0)) or
          (states('timer.wc_ventilation') in ['idle', 'paused']) }}"
    actions:
      - action: timer.start
        data:
          entity_id: timer.wc_ventilation
          duration:
            minutes: "{{ states('input_number.wc_ventilate_for_minutes_after_manual_trigger') | default(0) | float(0) }}"
      # Stop waitin to bathroom humidity is below threshold, cause we are ventilating manually
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: MANUAL_ON
      - action: automation.turn_off
        entity_id: automation.wc_ventilation_stop_humidity_below_threshold

  - alias: WC Ventilation Stop Timer Manually
    id: wc_ventilation_stop_timer_manually
    triggers:
      - trigger: state
        entity_id: fan.wc_and_bathroom
        from: "on"
        to: "off"
    conditions:
      - condition: state
        entity_id: timer.wc_ventilation
        state: "active"
    actions:
      - action: timer.cancel
        entity_id: timer.wc_ventilation
      - action: timer.cancel
        entity_id: timer.wc_wait_for_open_to_ventilate
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: MANUAL_OFF
      - action: automation.turn_off
        entity_id: automation.wc_ventilation_stop_humidity_below_threshold

  - alias: WC Ventilation Timeout
    id: wc_ventilation_timeout
    triggers:
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.wc_ventilation
    actions:
      - action: fan.turn_off
        entity_id: fan.wc_and_bathroom
      - action: timer.cancel
        entity_id: timer.wc_wait_for_open_to_ventilate
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: TIMEOUT
      - action: automation.turn_off
        entity_id: automation.wc_ventilation_stop_humidity_below_threshold

  - alias: WC Ventilation Start Timeout For Door Open State
    id: wc_ventilation_start_timeout_for_door_open_state
    triggers:
      - trigger: state
        entity_id: input_boolean.wc_occupied
        from: "off"
        to: "on"
        for:
          seconds: "{{ states('input_number.wc_consider_ventilate_when_finished_if_occupied_for_seconds') | default(0) | float(0) }}"
    actions:
      - action: timer.start
        data:
          entity_id: timer.wc_wait_for_open_to_ventilate
          duration:
            minutes: "{{ states('input_number.wc_wait_for_opening_after_considered_to_ventilate_minutes') | default(0) | float(0) }}"

  - alias: WC Ventilation Start When Unoccupied
    id: wc_ventilation_start_when_unoccupied
    triggers:
      - trigger: state
        entity_id: input_boolean.wc_occupied
        from: "on"
        to: "off"
    conditions:
      - condition: state
        entity_id: timer.wc_wait_for_open_to_ventilate
        state: "active"
      # Run that only if new timer finish time is greater than the current one or if timer is inactive
      - condition: template
        value_template:
          "{{ ((now() + timedelta(minutes=states('input_number.wc_ventilate_for_minutes_when_finished') | default(0) | float(0))).timestamp() >
          as_timestamp(state_attr('timer.wc_ventilation', 'finishes_at'), 0)) or
          (states('timer.wc_ventilation') in ['idle', 'paused']) }}"
    actions:
      - action: fan.turn_on
        entity_id: fan.wc_and_bathroom
      - action: timer.cancel
        entity_id: timer.wc_wait_for_open_to_ventilate
      - action: timer.start
        data:
          entity_id: timer.wc_ventilation
          duration:
            minutes: "{{ states('input_number.wc_ventilate_for_minutes_when_finished') | default(0) | float(0) }}"
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: TOILET_ON

  - alias: WC Ventilation Start Humidity Exceeds Threshold
    id: wc_ventilation_start_humidity_exceeds_threshold
    triggers:
      - trigger: numeric_state
        entity_id: sensor.ble_humidity_atc_bathroom
        above: input_number.wc_ventilation_start_humidity_threshold
        for: 00:02:00
    actions:
      - action: timer.cancel
        entity_id: timer.wc_wait_for_open_to_ventilate
      - action: automation.turn_on
        entity_id: automation.wc_ventilation_stop_humidity_below_threshold
      - action: timer.start
        data:
          entity_id: timer.wc_ventilation
          duration:
            minutes: "{{ states('input_number.wc_max_ventilation_duration_minutes') | default(0) | float(0) }}"
      - action: fan.turn_on
        entity_id: fan.wc_and_bathroom
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: HUMIDITY_ON

  - alias: WC Ventilation Stop Humidity Below Threshold
    id: wc_ventilation_stop_humidity_below_threshold
    triggers:
      - trigger: numeric_state
        entity_id: sensor.ble_humidity_atc_bathroom
        below: input_number.wc_ventilation_stop_humidity_threshold
        for: 00:02:00
    actions:
      - action: timer.cancel
        entity_id: timer.wc_ventilation
      - action: fan.turn_off
        entity_id: fan.wc_and_bathroom
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: HUMIDITY_OFF
      - action: automation.turn_off
        entity_id: automation.wc_ventilation_stop_humidity_below_threshold

  # Emergency start WC ventilation timer to prevent infinite ventilation
  - alias: WC Ventilation Start Timer Emergency
    id: wc_ventilation_start_timer_emergency
    triggers:
      - trigger: state
        entity_id: fan.wc_and_bathroom
        to: "on"
        for: 00:01:00
    conditions:
      - or:
          - condition: state
            entity_id: timer.wc_ventilation
            state: "idle"
          - condition: state
            entity_id: timer.wc_ventilation
            state: "paused"
    actions:
      - action: timer.start
        data:
          entity_id: timer.wc_ventilation
          duration:
            minutes: "{{ states('input_number.wc_max_ventilation_duration_minutes') | default(0) | float(0) }}"
      - action: input_select.select_option
        data:
          entity_id: input_select.wc_ventilation_state
          option: EMERGENCY
