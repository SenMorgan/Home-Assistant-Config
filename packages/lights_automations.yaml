######################################################################
# File: lights_automations.yaml                                      #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2024-02-13                                                   #
#                                                                    #
# Copyright (c) 2024 Sen Morgan                                      #
######################################################################

###############################################
## SETTINGS AND VARIABLES
###############################################
homeassistant:
  customize:
    package.node_anchors:
      sys_notify_title_info: &sys_notify_title_info "üí¨ –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
      sys_notify_title_warning: &sys_notify_title_warning "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"
      sys_notify_title_critical: &sys_notify_title_critical "üö® –í–Ω–∏–º–∞–Ω–∏–µ!"

###############################################
## SCRIPTS
###############################################
script:
  turn_off_all_lights:
    alias: Turn Off All Lights
    sequence:
      - action: light.turn_off
        entity_id: all
      - action: scene.turn_on
        entity_id: scene.wallpanel_screen_off
      - action: switch.turn_off
        entity_id:
          - switch.dcc_ex_pwr
          - switch.interactive_cz_map_enable

  turn_off_lights_after_people_leave:
    alias: Turn off lights after people leave
    sequence:
      - wait_template: "{{ states('binary_sensor.people_home') == 'off' }}"
        timeout: "00:30:00"
        continue_on_timeout: false
      # Check if guest mode is still disabled after waiting
      - if:
          - condition: state
            entity_id: input_boolean.guest_mode
            state: "off"
        then:
          - action: script.turn_on
            entity_id: script.turn_off_all_lights
          - action: scene.turn_on
            entity_id: scene.no_people_home
          - variables:
              # Including an id in the action allows us to identify this script run
              # and not accidentally trigger for other notification actions
              action_enable_guest_mode: "{{ 'action_enable_guest_mode' ~ context.id }}"
          - action: notify.mobile_app_sm_s901b
            data:
              title: "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è"
              message: >
                {% if is_state('input_boolean.heating_season', 'on') %}
                  –¢–µ—Ä–º–æ—Å—Ç–∞—Ç –∏ —Å–≤–µ—Ç –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
                {% else %}
                  –í–µ—Å—å —Å–≤–µ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω
                {% endif %}
              data:
                actions:
                  - action: "{{ action_enable_guest_mode }}"
                    title: üë§ –í–∫–ª—é—á–∏—Ç—å –≥–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º
          - wait_for_trigger:
              - trigger: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "{{ action_enable_guest_mode }}"
          - if:
              - condition: template
                value_template: "{{ wait.trigger.event.data.action == action_enable_guest_mode }}"
            then:
              - action: script.enable_guest_mode

  switch_on_parking_light:
    alias: Switch On Parking Light
    sequence:
      - action: switch.turn_off
        target:
          entity_id: switch.parking_light
      - delay:
          seconds: 15
      - repeat:
          while:
            - condition: state
              entity_id: switch.parking_light
              state: "off"
            # Don't do it too many times
            - condition: template
              value_template: "{{ repeat.index <= 300 }}"
          sequence:
            - action: switch.turn_on
              target:
                entity_id: switch.parking_light
            - delay:
                seconds: 1

###############################################
## AUTOMATIONS
###############################################
automation:
  ###############################################
  ## Welcome and Hall Lights Automations
  ###############################################
  - id: "hall_lights_and_alice_greeting"
    alias: Hall Lights and Alice Greeting
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        id: "SEN_CAME_HOME"
        entity_id: person.sen
        to: "home"
      - trigger: state
        id: "KRIS_CAME_HOME"
        entity_id: person.kris
        to: "home"
    #  conditions:
    #    - condition: time
    #      after: "6:00:00"
    #      before: "22:00:00"
    actions:
      - wait_template: "{{ states('binary_sensor.hall_door_contact') == 'on' }}"
        timeout: 00:15:00
        continue_on_timeout: false
      # Switch on hall lights immediately after door was opened if Sen came home
      - if:
          - condition: trigger
            id: "SEN_CAME_HOME"
        then:
          - action: light.turn_on
            entity_id: light.hall_lights
      - wait_template: "{{ states('binary_sensor.hall_door_contact') == 'off' }}"
        timeout: 00:10:00
        continue_on_timeout: false
      - choose:
          # Only Sen came home
          - conditions:
              - condition: trigger
                id: "SEN_CAME_HOME"
              # Check if Kris's state didn't changed after Sen's
              - condition: template
                value_template:
                  "{{ ( as_timestamp(states.person.kris.last_changed, 0) | int(0) ) <
                  ( as_timestamp(states.person.sen.last_changed, 0) | int(0) ) }}"
            sequence:
              - delay: 00:00:01
              - action: media_player.play_media
                entity_id: media_player.yandex_station_midi
                data:
                  media_content_id: >
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Ç–µ—Ä –ú–æ—Ä–≥–∞–Ω!
                  media_content_type: dialog
                  extra:
                    volume_level: 0.8
              - choose:
                  - conditions:
                      - condition: sun
                        after: sunset
                        before_offset: 00:15:00
                    sequence:
                      - action: light.turn_on
                        entity_id: light.string_lights
                      - delay: 00:00:01
                      - action: light.turn_on
                        entity_id: light.kitchen_ceiling_light
          # Only Kris came home
          - conditions:
              - condition: trigger
                id: "KRIS_CAME_HOME"
              # Check if Sen's state didn't changed after Kris's
              - condition: template
                value_template:
                  "{{ ( as_timestamp(states.person.sen.last_changed, 0) | int(0) ) <
                  ( as_timestamp(states.person.kris.last_changed, 0) | int(0) ) }}"
            sequence:
              - action: media_player.play_media
                alias: "Only welcome"
                entity_id: media_player.yandex_station_midi
                data:
                  media_content_id: >
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Å–∏—Å –ú–æ—Ä–≥–∞–Ω
                  media_content_type: dialog
                  extra:
                    volume_level: 0.6
          # Bouth came home
          - conditions:
              - condition: state
                entity_id: person.sen
                state: "home"
              - condition: state
                entity_id: person.kris
                state: "home"
            sequence:
              - alias: "Switch on lights and welcome"
                choose:
                  - conditions:
                      - condition: sun
                        after: sunset
                        before_offset: 00:15:00
                    sequence:
                      - action: light.turn_on
                        entity_id: light.string_lights
              - action: media_player.play_media
                alias: "Welcome everybody"
                entity_id: media_player.yandex_station_midi
                data:
                  media_content_id: >
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Ç–µ—Ä –∏ –º–∏—Å—Å–∏—Å –ú–æ—Ä–≥–∞–Ω
                  media_content_type: dialog
                  extra:
                    volume_level: 0.6
        default:
          - action: script.notify_and_create_persistent_notification
            data:
              title: *sys_notify_title_warning
              message: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ —Å–º–æ–≥–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ç–æ –ø—Ä–∏—à–µ–ª –¥–æ–º–æ–π

  - id: "home_all_lights_off"
    alias: Home All Lights OFF
    mode: restart
    triggers:
      - trigger: state
        entity_id: binary_sensor.hall_door_contact
        from: "on"
        to: "off"
    conditions:
      - condition: state
        entity_id: binary_sensor.people_home
        state: "on"
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
    actions:
      - action: script.turn_on
        entity_id: script.turn_off_lights_after_people_leave

  - id: "hall_lights_by_motion_on"
    alias: Hall Lights by Motion ON
    triggers:
      - trigger: state
        entity_id: binary_sensor.hall_door_contact
        to: "on"
      - trigger: state
        entity_id: binary_sensor.aqara_hall_motion_sensor_occupancy
        to: "on"
    conditions:
      - condition: state
        entity_id: light.hall_lights
        state: "off"
    actions:
      - action: light.turn_on
        entity_id: light.hall_lights
      - action: input_boolean.turn_on
        entity_id: input_boolean.flag_hall_lights_triggered_by_motion

  - id: "hall_lights_by_motion_off"
    alias: Hall Lights by Motion OFF
    triggers:
      - trigger: state
        entity_id: binary_sensor.aqara_hall_motion_sensor_occupancy
        to: "off"
    conditions:
      - condition: state
        entity_id: input_boolean.flag_hall_lights_triggered_by_motion
        state: "on"
    actions:
      - action: light.turn_off
        entity_id: light.hall_lights
      - action: input_boolean.turn_off
        entity_id: input_boolean.flag_hall_lights_triggered_by_motion

  ###############################################
  ## Other Lights Automations
  ###############################################
  - id: "kitchen_asus_pc_background_lights_on"
    alias: Kitchen Asus PC Background Lights ON
    triggers:
      - trigger: sun
        id: "SUNSET"
        event: sunset
        offset: -00:25:00
      - trigger: state
        id: "PC_ON"
        entity_id: switch.asus_pc
        from: "off"
        to: "on"
    conditions:
      - condition: state
        entity_id: person.sen
        state: "home"
      - or:
          - and:
              - condition: trigger
                id: "SUNSET"
              - condition: state
                entity_id: switch.asus_pc
                state: "on"
          - and:
              - condition: trigger
                id: "PC_ON"
    actions:
      - action: light.turn_on
        entity_id:
          - light.gyver_lamp
      - if:
          - condition: template
            value_template: >
              {{ states('person.kris') == 'home'}}
        then:
          - action: switch.turn_off
            entity_id:
              - switch.pc_backlight_sync_send
        else:
          - action: light.turn_on
            entity_id:
              - light.shelf_lighting
              - light.pc_backlight
          - action: switch.turn_on
            entity_id:
              - switch.pc_backlight_sync_send

  - id: "kitchen_asus_pc_background_lights_off"
    alias: Kitchen Asus PC Background Lights OFF
    triggers:
      - trigger: state
        entity_id: switch.asus_pc
        from: "on"
        to: "off"
    actions:
      - action: light.turn_off
        entity_id:
          - light.gyver_lamp
          - light.shelf_lighting

  - id: "kitchen_clock_disable_by_presence"
    alias: Kitchen Clock Disable by Presence
    triggers:
      - trigger: state
        entity_id: binary_sensor.people_home
        to: "off"
        for: 00:01:00
    condition:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
    actions:
      - action: light.turn_off
        entity_id: light.7_seg_clock

  - id: "kitchen_clock_reenable"
    alias: Kitchen Clock Reenable
    triggers:
      - trigger: state
        entity_id: light.7_seg_clock
        to: "off"
        for: 00:00:05
      - trigger: state
        entity_id: binary_sensor.kitchen_motion_alarm
        to: "on"
      - trigger: state
        entity_id: input_boolean.home_night_mode
        to: "off"
    conditions:
      - condition: state
        entity_id: light.7_seg_clock
        state: "off"
      - condition: state
        entity_id: binary_sensor.people_home
        state: "on"
      - condition: time
        after: "05:00:00"
        before: "22:00:00"
    actions:
      - action: light.turn_on
        entity_id: light.7_seg_clock

  - id: "interactive_cz_map_reenable"
    alias: Interactive CZ Map Reenable
    triggers:
      - trigger: state
        entity_id: binary_sensor.kitchen_motion_alarm
        to: "on"
      - trigger: state
        entity_id: input_boolean.home_night_mode
        to: "off"
    conditions:
      - condition: state
        entity_id: switch.interactive_cz_map_enable
        state: "off"
      - condition: state
        entity_id: binary_sensor.people_home
        state: "on"
      - condition: time
        after: "05:00:00"
        before: "22:00:00"
    actions:
      - action: switch.turn_on
        entity_id: switch.interactive_cz_map_enable

  - id: "living_room_tv_lights_by_sunset_or_tv_on"
    alias: Living Room TV Lights by Sunset or TV ON
    triggers:
      - trigger: sun
        id: "SUNSET"
        event: sunset
        offset: -00:15:00
      - trigger: state
        id: "TV_ON"
        entity_id: media_player.samsung_tv
        to: "on"
    conditions:
      # Only if Sen is home
      - condition: state
        entity_id: person.sen
        state: "home"
      # Only from 20:00 to 22:00
      - condition: time
        after: "20:00:00"
        before: "22:00:00"
      # Only if silent mode enabled
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "on"
      - or:
          - and:
              - condition: trigger
                id: "SUNSET"
              - condition: state
                entity_id: media_player.samsung_tv
                state: "on"
          - and:
              - condition: trigger
                id: "TV_ON"
              - condition: sun
                after: sunset
                before_offset: 00:15:00
    actions:
      - wait_template: >
          {{ states('switch.asus_pc') == 'off' and
            states('light.kitchen_spotlights') == 'off' and
            states('light.kitchen_ceiling_light') == 'off' and
            states('light.bedroom_nightlight') == 'off' and
            states('binary_sensor.kitchen_motion_alarm') == 'off' }}
        timeout: 01:00:00
        continue_on_timeout: false
      # Check if it's still needed (TV is on)
      - if:
          - condition: state
            entity_id: media_player.samsung_tv
            state: "on"
        then:
          - action: scene.turn_on
            entity_id: scene.movies

  - id: "living_room_tv_lights_by_sunrise_off"
    alias: Living Room TV Lights by Sunrise OFF
    triggers:
      - trigger: sun
        event: sunrise
        offset: -01:00:00
    actions:
      - action: light.turn_off
        entity_id: light.tv_lights

  - id: "parking_lights_on"
    alias: Parking Lights ON
    mode: queued
    triggers:
      - trigger: state
        entity_id: input_button.parking_light
    actions:
      - action: script.turn_on
        target:
          entity_id: script.switch_on_parking_light

  # Send me notification if switch.parking_light is turned off for more than 1 hour and turn it ON
  - id: "parking_light_emergency_on"
    alias: Parking Light Emergency On
    triggers:
      - trigger: state
        entity_id: switch.parking_light
        to: "off"
        for: 1:00:00
    actions:
      - repeat:
          until:
            - condition: state
              entity_id: switch.parking_light
              state: "on"
          sequence:
            - action: switch.turn_on
              entity_id: switch.parking_light
            - action: notify.mobile_app_sm_s901b
              data:
                title: *sys_notify_title_info
                message: –†–µ–ª–µ –æ—Å–≤–µ—â–µ–Ω–∏—è –ø–∞—Ä–∫–æ–≤–∫–∏ –±—ã–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –±–æ–ª–µ–µ —á–∞—Å–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –≤ {{ states('sensor.time') }}
            - delay: 00:01:00

  - id: "kitchen_led_strip_sync_with_spotlights"
    alias: Kitchen LED Strip Sync with Spotlights
    triggers:
      - trigger: state
        entity_id: light.kitchen_spotlights
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state in ['on', 'off'] }}"
    actions:
      - action: light.turn_{{ trigger.to_state.state }}
        entity_id: light.kitchen_led_strip

  ###############################################
  ## BUSY WALL SWITCHES
  ###############################################
  - id: "busy_wall_switch_1"
    alias: Busy Wall Switch 1
    mode: restart
    triggers:
      - trigger: state
        entity_id: binary_sensor.air_quality_station_digital_input_1
        from: "off"
        to: "on"
      - trigger: state
        entity_id: binary_sensor.air_quality_station_digital_input_1
        from: "on"
        to: "off"
    conditions:
      - condition: state
        entity_id: input_boolean.child_lock
        state: "off"
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
    actions:
      - action: light.toggle
        entity_id: light.living_room_ceiling_light

  - id: "busy_wall_switch_2"
    alias: Busy Wall Switch 2
    mode: restart
    triggers:
      - trigger: state
        entity_id: binary_sensor.air_quality_station_digital_input_2
        from: "off"
        to: "on"
      - trigger: state
        entity_id: binary_sensor.air_quality_station_digital_input_2
        from: "on"
        to: "off"
    actions:
      - action: light.toggle
        entity_id: light.floor_lamp

###############################################
## SCENES
###############################################
scene:
  - id: movies
    name: Movies
    entities:
      light.tv_lights: on
      light.bedroom_nightlight: off
      light.floor_lamp: off
      light.gyver_lamp: off
      light.hall_lights: off
      light.kitchen_ceiling_light: off
      light.kitchen_spotlights: off
      light.living_room_ceiling_light: off
      light.living_room_christmas_lights: on
      light.mi_desk_lamp:
        brightness: 5
        color_temp_kelvin: 3000
        state: on
      light.shelf_lighting: off
      light.string_lights: off
      media_player.samsung_tv: on

  - id: evening
    name: Evening
    entities:
      light.tv_lights: on
      light.bedroom_ceiling_light: off
      light.bedroom_nightlight: off
      light.kitchen_christmas_lights: on
      light.gyver_lamp:
        brightness: 100
        state: on
      light.hall_lights: off
      light.kitchen_ceiling_light: off
      light.kitchen_led_strip: off
      light.kitchen_spotlights: on
      light.living_room_christmas_lights: on
      light.mi_desk_lamp:
        brightness: 255
        color_temp_kelvin: 3000
        state: on
      light.pc_backlight: on
      light.shelf_lighting: on
      light.string_lights: on
      switch.dcc_ex_pwr: on
      switch.interactive_cz_map_enable: on
