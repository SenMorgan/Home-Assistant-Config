######################################################################
# File: tv_automations.yaml                                          #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2025-03-09                                                   #
#                                                                    #
# Info: this file contains the automations corresponding to the TV.  #
#                                                                    #
# Copyright (c) 2025 Sen Morgan                                      #
######################################################################

###############################################
## AUTOMATIONS
###############################################
automation:
  - alias: Living Room TV Lights by Sunset or TV ON
    id: "living_room_tv_lights_by_sunset_or_tv_on"
    triggers:
      - trigger: sun
        id: "SUNSET"
        event: sunset
        offset: -00:15:00
      - trigger: state
        id: "TV_ON"
        entity_id: media_player.samsung_tv
        to: "on"
    conditions:
      # Only if Sen is home
      - condition: state
        entity_id: person.sen
        state: "home"
      # Only from 20:00 to 22:00
      - condition: time
        after: "20:00:00"
        before: "22:00:00"
      # Only if silent mode enabled
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "on"
      - or:
          - and:
              - condition: trigger
                id: "SUNSET"
              - condition: state
                entity_id: media_player.samsung_tv
                state: "on"
          - and:
              - condition: trigger
                id: "TV_ON"
              - condition: sun
                after: sunset
                before_offset: 00:15:00
    actions:
      - wait_template: >
          {{ states('switch.asus_pc') == 'off' and
            states('light.kitchen_spotlights') == 'off' and
            states('light.kitchen_ceiling_light') == 'off' and
            states('light.bedroom_nightlight') == 'off' and
            states('binary_sensor.kitchen_motion_alarm') == 'off' }}
        timeout: 01:00:00
        continue_on_timeout: false
      # Check if it's still needed (TV is on)
      - if:
          - condition: state
            entity_id: media_player.samsung_tv
            state: "on"
        then:
          - action: scene.turn_on
            entity_id: scene.movies

  - alias: Living Room TV Lights by Sunrise OFF
    id: "living_room_tv_lights_by_sunrise_off"
    triggers:
      - trigger: sun
        event: sunrise
        offset: -01:00:00
    actions:
      - action: light.turn_off
        entity_id: light.tv_lights

  - alias: Living Room Speakers ON with TV
    id: "living_room_speakers_on_with_tv"
    triggers:
      - trigger: state
        entity_id: media_player.samsung_tv
        to: "on"
    conditions:
      - condition: state
        entity_id: switch.monolith_speakers
        state: "off"
    actions:
      - action: switch.turn_on
        entity_id: switch.monolith_speakers

  - alias: Living Room Speakers Standby OFF
    id: "living_room_speakers_standby_off"
    triggers:
      - trigger: numeric_state
        entity_id: sensor.monolith_speakers_active_power
        # Backlight + speakers active = ~15W, backlight + speakers standby = ~8W
        below: 12 # Power threshold (W) for standby mode
        for: "00:05:00"
    conditions:
      - condition: state
        entity_id: switch.monolith_speakers
        state: "on"
    actions:
      - action: switch.turn_off
        entity_id: switch.monolith_speakers