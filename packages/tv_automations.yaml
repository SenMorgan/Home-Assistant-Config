######################################################################
# File: tv_automations.yaml                                          #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2025-03-09                                                   #
#                                                                    #
# Info: this file contains the automations corresponding to the TV.  #
#                                                                    #
# Copyright (c) 2025 Sen Morgan                                      #
######################################################################

###############################################
## BINARY SENSORS
###############################################
binary_sensor:
  - platform: template
    sensors:
      monolith_speakers_above_power_threshold:
        friendly_name: "Monolith Speakers Above Power Threshold"
        # Backlight + speakers active = ~32W, backlight + speakers standby = ~8W
        value_template: "{{ states('sensor.monolith_speakers_active_power') | float(0) > 12 }}"
        device_class: power

###############################################
## AUTOMATIONS
###############################################
automation:
  - alias: Living Room TV Lights by Sunset or TV ON
    id: living_room_tv_lights_by_sunset_or_tv_on
    description: "Turn on TV lights automatically by sunset or when TV is turned on"
    triggers:
      - trigger: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: 1.20
      - trigger: state
        entity_id: media_player.samsung_tv
        to: "on"
    conditions:
      # For elevation trigger
      - condition: state
        entity_id: media_player.samsung_tv
        state: "on"
      # For TV trigger
      - condition: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: 1.20
    actions:
      - wait_template: >
          {{ states('switch.asus_pc') == 'off' and
            states('light.kitchen_spotlights') == 'off' and
            states('light.kitchen_ceiling_light') == 'off' and
            states('light.bedroom_nightlight') == 'off' and
            states('binary_sensor.kitchen_motion_alarm') == 'off' }}
        timeout: 01:00:00
        continue_on_timeout: false
      # Check if it's still needed (TV is on)
      - if:
          - condition: state
            entity_id: media_player.samsung_tv
            state: "on"
        then:
          - action: scene.turn_on
            entity_id: scene.movies

  - alias: Living Room Speakers Power On with TV
    id: living_room_speakers_power_on_with_tv
    description: "Turn on speakers automatically when TV is turned on"
    trigger:
      - platform: state
        entity_id: media_player.samsung_tv
        to: "on"
    condition:
      - condition: state
        entity_id: switch.monolith_speakers
        state: "off"
    action:
      - action: switch.turn_on
        entity_id: switch.monolith_speakers

  - alias: Living Room Speakers Standby OFF
    id: living_room_speakers_standby_off
    description: "Turn off speakers when in standby mode for a while and TV is off"
    trigger:
      - platform: state
        entity_id: binary_sensor.monolith_speakers_above_power_threshold
        to: "off"
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: switch.monolith_speakers
        state: "on"
      - condition: state
        entity_id: media_player.samsung_tv
        state: "off"
    action:
      - action: switch.turn_off
        entity_id: switch.monolith_speakers

  - alias: Living Room Speakers Auto Power Down
    id: living_room_speakers_auto_power_down
    description: "Turn off speakers if power consumption remains low after powering on"
    trigger:
      - platform: state
        entity_id: switch.monolith_speakers
        to: "on"
    action:
      - alias: "Check if power consumption exceeds threshold"
        wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.monolith_speakers_above_power_threshold
            to: "on"
        timeout:
          minutes: 5
      - if:
          - "{{ not wait.completed }}"
        then:
          - alias: "Power off if threshold not exceeded"
            action: switch.turn_off
            entity_id: switch.monolith_speakers
