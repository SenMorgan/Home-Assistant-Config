######################################################################
# File: notifications.yaml                                           #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2024-05-05                                                   #
#                                                                    #
# Copyright (c) 2024 Sen Morgan                                      #
######################################################################

###############################################
## SETTINGS AND VARIABLES
###############################################
homeassistant:
  customize:
    package.node_anchors:
      sys_notify_title_info: &sys_notify_title_info "üí¨ –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
      sys_notify_title_warning: &sys_notify_title_warning "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"
      sys_notify_title_critical: &sys_notify_title_critical "üö® –í–Ω–∏–º–∞–Ω–∏–µ!"

###############################################
## SCRIPTS
###############################################
script:
  notify_and_create_persistent_notification:
    alias: Notify and Create Persistent Notification
    sequence:
      - action: notify.mobile_app_sm_s901b
        data:
          title: "{{ title }}"
          message: "{{ message }}"
      - action: persistent_notification.create
        data:
          title: "{{ title }}"
          message: "{{ message }}"

###############################################
## AUTOMATIONS
###############################################
automation:
  - id: "notification_snow"
    alias: Notification Snow
    triggers:
      - trigger: numeric_state
        entity_id: sensor.openweathermap_snow
        above: 0
    actions:
      - action: notify.mobile_app_sm_s901b
        data_template:
          title: ‚ùÑÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω–µ–≥–µ
          message: –î–æ–ª–∂–Ω–æ –≤—ã–ø–∞–¥–∞—Ç—å {{ states('sensor.openweathermap_snow') }} –º–º/—á —Å–Ω–µ–≥–∞!

  - id: "notification_door_opened"
    alias: Notification Door Opened
    triggers:
      - trigger: state
        entity_id: binary_sensor.hall_door_contact
        to: "on"
    conditions:
      - condition: template
        value_template: >
          {{ not states('person.sen') == 'home'}}
    actions:
      - action: notify.mobile_app_sm_s901b
        data:
          title: *sys_notify_title_info
          message: –í—Ö–æ–¥–Ω–∞—è –¥–≤–µ—Ä—å –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ {{ states('sensor.time') }}

    - id: "notification_ads_b_receiver_disconnected"
    alias: Notification ADS-B Receiver Disconnected
    triggers:
      - trigger: state
        entity_id: binary_sensor.fr24_feeder_receiver_connected
        from: "on"
        to: "off"
        for: "00:05:00"
    actions:
      - variables:
          timestamp: "{{ trigger.to_state.last_changed.astimezone(now().tzinfo).strftime('%H:%M:%S') }}"
      - action: script.notify_and_create_persistent_notification
        data:
          title: *sys_notify_title_warning
          message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞ –≤ {{ timestamp }}
      - action: automation.turn_on
        entity_id: automation.notification_ads_b_receiver_connection_restored

  - id: "notification_ads_b_receiver_connection_restored"
    alias: Notification ADS-B Receiver Connection Restored
    triggers:
      - trigger: state
        entity_id: binary_sensor.fr24_feeder_receiver_connected
        from: "off"
        to: "on"
        for: "00:01:00"
    actions:
      - variables:
          timestamp: "{{ trigger.to_state.last_changed.astimezone(now().tzinfo).strftime('%H:%M:%S') }}"
      - action: script.notify_and_create_persistent_notification
        data:
          title: *sys_notify_title_info
          message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ {{ timestamp }}
      - action: automation.turn_off
        entity_id: automation.notification_ads_b_receiver_connection_restored

  - id: "notification_diesel_price_changed"
    alias: Notification Diesel Price Changed
    triggers:
      - trigger: state
        entity_id: sensor.diesel_price_ono
    conditions:
      - condition: template
        value_template: >
          {{ trigger.from_state.state != trigger.to_state.state }}
      - condition: template
        value_template: >
          {{ is_number(trigger.from_state.state) and is_number(trigger.to_state.state) }}
    actions:
      - action: script.notify_and_create_persistent_notification
        data:
          title: *sys_notify_title_info
          message: >
            –¶–µ–Ω–∞ –¥–∏–∑–µ–ª—è {{ '—É–ø–∞–ª–∞' if trigger.from_state.state | float(0) > trigger.to_state.state | float(0) else '–≤–æ–∑—Ä–∞—Å–ª–∞' }}
            —Å {{ trigger.from_state.state }} –¥–æ {{ trigger.to_state.state }} Kƒç/L

  # This automation in define in my private.yaml, so here is only a snippet
  # - id: "notification_aircraft_detected"
  #   alias: Notification Aircraft Detected
  #   triggers:
  #     - trigger: state
  #       entity_id: sensor.fr24_aircraft
  #   conditions:
  #     - condition: template
  #       value_template: "{{ state_attr('sensor.fr24_aircraft', 'aircraft') | regex_search('AIRCRAFT1|AIRCRAFT2|AIRCRAFT3') }}"
  #     - condition: template
  #       value_template: >
  #         {{ now() - state_attr('automation.notification_aircraft_detected', 'last_triggered') > timedelta(minutes=5) }}
  #   actions:
  #     - variables:
  #         aircrafts_to_track: 'AIRCRAFT1|AIRCRAFT2|AIRCRAFT3'
  #     - action: notify.mobile_app_sm_s901b
  #       data:
  #         title: "‚úàÔ∏è Known Aircraft Detected"
  #         message: |
  #           {% set aircraft = namespace(flight='', alt_baro='', gs='') %}
  #           {% set aircrafts_list = state_attr('sensor.fr24_aircraft', 'aircraft') %}
  #           {% for element in aircrafts_list if element | regex_search(aircrafts_to_track) %}
  #                   {% set aircraft.flight = element['flight'] %}
  #                   {% set aircraft.alt = (((element['alt_baro'] | float) * 0.3048) | int(0)) | string %}
  #                   {% set aircraft.gs = (((element['gs'] | float) * 1.852) | int(0)) | string %}
  #           {% endfor %}
  #           {% if aircraft.flight == '' %}
  #                   {{ 'Aircraft data not received' }}
  #           {% else %}
  #                   {{ 'Flight number: ' + aircraft.flight }}
  #                   {{ 'Altitude: ' + aircraft.alt + ' m' }}
  #                   {{ 'Speed: ' + aircraft.gs + ' km/h' }}
  #           {% endif %}

  - id: "notification_solar_panel_power_above_threshold"
    alias: Notification Solar Panel Power Above Threshold
    triggers:
      - trigger: numeric_state
        entity_id: sensor.solar_panel_power
        above: 45
    actions:
      - action: notify.mobile_app_sm_s901b
        data:
          title: "üåû –°–æ–ª–Ω–µ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å"
          message: "–ú–æ—â–Ω–æ—Å—Ç—å –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞: {{ states('sensor.solar_panel_power') }} W"
