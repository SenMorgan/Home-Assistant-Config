######################################################################
# File: zha_devices_actions.yaml                                     #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2023-06-14                                                   #
#                                                                    #                                                                    #
# Copyright (c) 2023 Sen Morgan                                      #
#                                                                    #
# Note:                                                              #
# Device IDs are unique and could be found in:                       #
# Developer Tools → Events → Listen to events → "zha_event".         #
# After some action with device it must be loged there.              #
#                                                                    #
######################################################################

###############################################
## AUTOMATIONS
###############################################
automation:
  ###############################################
  ## Aqara Switch Automations
  ###############################################
  - alias: Aqara Switch 1 Handler
    id: "aqara_switch_1_handler"
    mode: restart
    max_exceeded: silent
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          # Aqara Switch 1
          device_id: "6559eaaf60c9624465f762290ff9e825"
    action:
      - variables:
          command: "{{ trigger.event.data.command }}"
      - choose:
          - conditions:
              - "{{ command == 'single' }}"
            sequence:
              - service: light.turn_off
                entity_id: all
              - service: scene.turn_on
                entity_id: scene.good_night
              - service: script.turn_on
                entity_id: script.home_night_mode
          - conditions:
              - "{{ command == 'double' }}"
            sequence:
              - service: light.toggle
                entity_id: light.bedroom_nightlight
          - conditions:
              - "{{ command == 'hold' }}"
            sequence:
              - service: cover.open_cover
                entity_id: cover.bedroom
              - service: script.turn_on
                entity_id: script.home_day_mode
        default: []

  ###############################################
  ## Aqara Cube Automations
  ###############################################

  - alias: Aqara Cube 1 Handler
    id: "aqara_cube_1_handler"
    mode: restart
    max_exceeded: silent
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          # Aqara Cube 1
          device_id: "48fad66663fc601ed1a63ac01e804fab"
    action:
      - if:
          - condition: state
            entity_id: input_boolean.cube_1_control
            state: "on"
        then:
          - variables:
              command: "{{ trigger.event.data.command }}"
              value: "{{ trigger.event.data.args.value }}"
              flip_degrees: "{{ trigger.event.data.args.flip_degrees }}"
              relative_degrees: "{{ trigger.event.data.args.relative_degrees }}"
          - choose:
              - conditions:
                  - "{{ flip_degrees == 90 }}"
                sequence:
                  - service: light.toggle
                    entity_id: light.string_lights
              - conditions:
                  - "{{ flip_degrees == 180 }}"
                sequence:
                  - service: light.toggle
                    entity_id: light.floor_lamp
              - conditions:
                  - "{{ command == 'shake' }}"
                sequence:
                  - service: light.turn_off
                    entity_id: all
              - conditions:
                  - "{{ command == 'tap' }}"
                sequence:
                  - service: scene.turn_on
                    entity_id: scene.movies
              - conditions:
                  - "{{ command == 'slide' }}"
                sequence:
                  - service: light.toggle
                    entity_id: light.mi_desk_lamp
              - conditions:
                  - "{{ command == 'rotate_left' or command == 'rotate_right' }}"
                sequence:
                  - service: light.turn_on
                    entity_id: light.mi_desk_lamp
                    data_template:
                      brightness:
                        "{% set suggested = state_attr('light.mi_desk_lamp', 'brightness')\
                        \ | int + \n  relative_degrees | int + 1\
                        \ %}\n{% if suggested > 0 %} {{ suggested }} {% else %} 1 {% endif %}\n"
