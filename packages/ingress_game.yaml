######################################################################
# File: scrape.yaml                                                  #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2025-10-06                                                   #
#                                                                    #
# Info: this file contains Ingress game sensors for Home Assistant.  #
# Pay attention that using this scraping method may violate Ingress  #
# Terms of Service. Use at your own risk.                            #
#                                                                    #
# Copyright (c) 2025 Sen Morgan                                      #
######################################################################

###############################################
## REST SENSORS
###############################################
rest:
  - resource: https://intel.ingress.com/r/getPortalDetails
    method: POST
    scan_interval: 60
    headers:
      Accept: "*/*"
      Accept-Encoding: "gzip, deflate, br"
      Accept-Language: "en-US,en;q=0.8"
      Content-Type: "application/json; charset=UTF-8"
      Origin: "https://intel.ingress.com"
      Referer: "https://intel.ingress.com/intel"
      User-Agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36"
      X-CSRFToken: !secret INGRESS-X-CSRFToken  # Format: "****************"
      Cookie: !secret INGRESS-Cookie  # Format: "csrftoken=********; sessionid.=********;"
    payload: !secret INGRESS-payload  # Format: '{"guid":"****************","v":"****************"}'
    sensor:
      - name: Ingress Portal Faction
        value_template: >-
          {% set t = value_json.result[1] | default(None) %}
          {% if t == 'E' %}Enlightened
          {% elif t == 'R' %}Resistance
          {% elif t == 'N' %}Neutral
          {% elif t == 'M' %}Machina
          {% else %}{{ t }}{% endif %}
        availability: "{{ value_json.result[1] | default(None) in ['E','R','N','M'] }}"
        picture: >-
          {% set t = value_json.result[1] | default(None) %}
          {% if t == 'E' %}/local/images/ingress/enlightened.png
          {% elif t == 'R' %}/local/images/ingress/resistance.png
          {% elif t == 'N' %}/local/images/ingress/neutral.png
          {% elif t == 'M' %}/local/images/ingress/machina.png
          {% else %}/local/images/ingress/neutral.png{% endif %}
      - name: Ingress Portal Energy Level
        value_template: "{{ value_json.result[5] | default(None) }}"
        availability: "{{ value_json.result[1] | default(None) in ['E','R','N','M'] }}"
        device_class: "battery"
        unit_of_measurement: "%"

###############################################
## AUTOMATIONS
###############################################
automation:
  - alias: Shelf Lighting Reenable
    id: "shelf_lighting_reenable"
    triggers:
      - trigger: state
        entity_id: person.sen
        to: "home"
      - trigger: state
        entity_id: input_boolean.home_night_mode
        to: "off"
    conditions:
      - condition: state
        entity_id: light.shelf_lighting
        state: "off"
      - condition: state
        entity_id: person.sen
        state: "home"
      - condition: state
        entity_id: input_boolean.home_night_mode
        state: "off"
      - condition: time
        after: "05:00:00"
        before: "22:00:00"
    actions:
      - alias: Turn on Scene based on Faction
        service: script.set_lighting_by_ingress_faction

  - alias: Notify on Ingress Portal Faction Change
    id: notify_on_ingress_portal_faction_change
    trigger:
      - platform: state
        entity_id: sensor.ingress_portal_faction
    condition:
      # Only if previous and new state are valid factions and different
      - condition: template
        value_template: >
          {{ trigger.from_state.state | default('unknown') in ['Enlightened', 'Resistance', 'Neutral', 'Machina'] and
             trigger.to_state.state  | default('unknown') in ['Enlightened', 'Resistance', 'Neutral', 'Machina'] and
             trigger.from_state.state != trigger.to_state.state }}
    action:
      - alias: Notify via Mobile App
        action: notify.mobile_app_sm_s901b
        data:
          title: "Ingress Portal Faction Changed"
          message: >
            New faction: {{ states('sensor.ingress_portal_faction') }}.
      - if:
          # Set scene only if Sen is home
          - condition: state
            entity_id: person.sen
            state: "home"
        then:
          - alias: Turn on Scene based on Faction
            service: script.set_lighting_by_ingress_faction
          - if:
              # Notify via Yandex Station only if Night Mode is off
              - condition: state
                entity_id: input_boolean.home_night_mode
                state: "off"
            then:
              - alias: Notify via Yandex Station
                action: media_player.play_media
                entity_id: media_player.yandex_station_midi
                data:
                  media_content_type: text
                  media_content_id: >
                    Внимание! Фракция портала изменилась на {{ states('sensor.ingress_portal_faction') }}.

###############################################
## SCRIPTS
###############################################
script:
  set_lighting_by_ingress_faction:
    alias: "Set Lighting Based on Ingress Faction"
    description: "Activate lighting based on Ingress Portal Faction"
    sequence:
      - service: light.turn_on
        target:
          entity_id: light.shelf_lighting
        data:
          effect: "Fairytwinkle"
          brightness: 40
          rgb_color: >
            {% if is_state('sensor.ingress_portal_faction', 'Enlightened') %}
              [8, 255, 0]
            {% elif is_state('sensor.ingress_portal_faction', 'Resistance') %}
              [0, 128, 255]
            {% elif is_state('sensor.ingress_portal_faction', 'Machina') %}
              [255, 0, 0]
            {% else %}
              [255, 255, 255]
            {% endif %}
      - service: select.select_option
        target:
          entity_id: select.shelf_lighting_color_palette
        data:
          option: "* Color 1"
      - service: number.set_value
        target:
          entity_id: number.shelf_lighting_intensity
        data:
          value: 255
      - service: number.set_value
        target:
          entity_id: number.shelf_lighting_speed
        data:
          value: 128
