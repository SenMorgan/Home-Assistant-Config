start_raven_engine_with_repeat:
  alias: Start Raven Engine
  sequence:
    - repeat:
        while:
          - condition: numeric_state
            entity_id: sensor.raven_motor_rpm
            below: 500
          - condition: template
            value_template: "{{ repeat.index <= 2 }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: switch.raven_engine
          - delay:
              seconds: 7
stop_raven_engine_with_repeat:
  alias: Stop Raven Engine
  sequence:
    - repeat:
        while:
          - condition: numeric_state
            entity_id: sensor.raven_motor_rpm
            above: 0
          - condition: template
            value_template: "{{ repeat.index <= 2 }}"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: switch.raven_engine
          - delay:
              seconds: 10

switch_on_parking_light:
  alias: Switch On Parking Light
  sequence:
    - service: switch.turn_off
      target:
        entity_id: switch.parking_light
    - delay:
        seconds: 15
    - repeat:
        while:
          - condition: state
            entity_id: switch.parking_light
            state: "off"
          # Don't do it too many times
          - condition: template
            value_template: "{{ repeat.index <= 300 }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: switch.parking_light
          - delay:
              seconds: 1

cover_correct_up:
  alias: Cover Correct Zero Pozition Up
  sequence:
    service: mqtt.publish
    data:
      topic: /blinds/set
      payload: "CORRECT_UP"

cover_correct_down:
  alias: Cover Correct Zero Pozition Down
  sequence:
    service: mqtt.publish
    data:
      topic: /blinds/set
      payload: "CORRECT_DOWN"

presentation:
  alias: Presentation
  sequence:
    # *****************************SEQUENCE START*************************************
    # Switch OFF all lights and TV
    #   - service: media_player.turn_off
    #     entity_id: media_player.tv
    - service: light.turn_off
      entity_id: all
    - delay:
        seconds: 4

    # Switch ON light in Hall
    - service: light.turn_on
      entity_id: light.tradfri_bulb
    - delay:
        seconds: 2

    # Switch OFF light in Hall
    - service: light.turn_off
      entity_id: light.tradfri_bulb
    - delay:
        seconds: 2

    # Switch ON Kitchen Spotlighs
    - service: light.turn_on
      entity_id: light.kitchen_spotlights
    - delay:
        seconds: 2

    # Switch OFF Kitchen Spotlighs
    - service: light.turn_off
      entity_id: light.kitchen_spotlights
    - delay:
        seconds: 2

    # Close Cover
    - service: cover.close_cover
      entity_id: cover.bedroom
    - delay:
        seconds: 5

    # Stop Cover
    - service: cover.stop_cover
      entity_id: cover.bedroom
    - delay:
        seconds: 5

    # Switch ON Retro Lamp
    - service: light.turn_on
      entity_id: light.retro_lampa
    - delay:
        seconds: 5

    # Switch OFF Retro Lamp
    - service: light.turn_off
      entity_id: light.retro_lampa
    - delay:
        seconds: 3

    # Switch ON Bar Light
    - service: light.turn_on
      entity_id: light.bar_light
    - delay:
        seconds: 2

    # Switch ON TV
    - service: media_player.turn_on
      entity_id: media_player.tv
    - delay:
        seconds: 5

    # Switch OFF Bar Light and TV
    - service: media_player.turn_off
      entity_id: media_player.tv
    - service: light.turn_off
      entity_id: light.bar_light
    - delay:
        seconds: 2

    # Switch ON Floor Lamp Half Brightness
    - service: light.turn_on
      target:
        entity_id: light.floor_lamp
      data:
        brightness: 50
    - delay:
        seconds: 2

    # Switch ON Floor Lamp FULL Brightness
    - service: light.turn_on
      target:
        entity_id: light.floor_lamp
      data:
        brightness: 255
    - delay:
        seconds: 2

    # Switch OFF Floor Lamp
    - service: light.turn_off
      entity_id: light.floor_lamp
    - delay:
        seconds: 2

    # Switch ON Desk Lamp FULL Brightness with COLD White
    - service: light.turn_on
      target:
        entity_id: light.mi_desk_lamp
      data:
        brightness: 255
        color_temp: 200
    - delay:
        seconds: 2

    # Switch ON Desk Lamp FULL Brightness with WARM White
    - service: light.turn_on
      target:
        entity_id: light.mi_desk_lamp
      data:
        brightness: 255
        color_temp: 385
    - delay:
        seconds: 2

    # Switch OFF Desk Lamp
    - service: light.turn_off
      entity_id: light.mi_desk_lamp
    - delay:
        seconds: 3

    # Flash ON Shelf Lighting with GREEN Color
    - service: light.turn_on
      target:
        entity_id: light.shelf_lighting
      data:
        brightness: 255
        effect: "Solid"
        rgb_color: [0, 255, 0]
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.shelf_lighting
    - delay:
        seconds: 1

    # Flash ON PC Backlight with RED Color
    - service: light.turn_on
      target:
        entity_id: light.pc_backlight
      data:
        brightness: 255
        effect: "Solid"
        rgb_color: [255, 0, 0]
    - delay:
        seconds: 0.5
    - service: light.turn_off
      entity_id: light.pc_backlight
    - delay:
        seconds: 5

    # Switch ON Lightning Scene
    - service: light.turn_on
      target:
        entity_id:
          - light.shelf_lighting
          - light.pc_backlight
      data:
        rgb_color: [255, 255, 255]
    - service: wled.effect
      target:
        entity_id:
          - light.shelf_lighting
          - light.pc_backlight
      data:
        effect: "Strobe Mega"
        palette: "Default"
        intensity: 255
        speed: 255
    - delay:
        seconds: 5

    # Switch OFF All Lights for a while
    - service: light.turn_off
      entity_id: all
    - delay:
        seconds: 3

    # Switch ON Shelf Lighting and PC Backlight with ORANGE Color
    - service: light.turn_on
      target:
        entity_id:
          - light.shelf_lighting
          - light.pc_backlight
      data:
        brightness: 150
        effect: "Solid"
        rgb_color: [255, 159, 0]

    # Delay before changing back to normal
    - delay:
        seconds: 30

    # Show road cameras "Ну и чисто по-приколу я подключился к дорожным камерам, дабы следить за траффиком"

    # Switch ON Daytime Lights Scene and Open Cover
    - service: scene.turn_on
      entity_id: scene.daytime_lights_enabled
    - service: cover.open_cover
      entity_id: cover.bedroom

update_shopping_list:
  alias: Update Shopping List
  sequence:
    - service: media_player.play_media
      entity_id: media_player.yandex_station
      data:
        media_content_id: update
        media_content_type: shopping_list

# Switch ON LG TV with magic packet through WoL
wake_tv:
  alias: Wake TV
  sequence:
    - service: wake_on_lan.send_magic_packet
      data:
        mac: !secret TV_MAC

tell_what_window_are_opened:
  alias: Tell What Windows Are Opened
  sequence:
    - if:
        - condition: state
          entity_id: binary_sensor.windows
          state: "on"
      then:
        - service: media_player.play_media
          entity_id: media_player.yandex_station
          data:
            media_content_type: text
            media_content_id: >
              {% if expand('binary_sensor.windows') | selectattr('state','eq','on') | list | count == 1 %}
                Внимание! Открыто окно: {{ expand('binary_sensor.windows') | selectattr('state','eq','on') | map(attribute='name') | list | join(', ') }}
              {% else %}
                Внимание! Открыты окна: {{ expand('binary_sensor.windows') | selectattr('state','eq','on') | map(attribute='name') | list | join(', ') }}
              {% endif %}

thermostat_set_mode:
  alias: Thermostat Set Mode
  mode: restart
  sequence:
    - service: script.thermostat_set_mode_repeater
      data_template:
        mode: "{{ mode }}"
    # Check if thermostat didn't change it's mode back after 10 seconds.
    - delay: 00:00:10
    # If thermostat didn't change it's mode back, then repeat the script.
    # This is needed because thermostat sometimes changes it's mode back
    # because of a bug in the thermostat firmware.
    - condition: template
      value_template: "{{ not is_state('climate.thermostat', mode) }}"
    - service: script.thermostat_set_mode_repeater
      data_template:
        mode: "{{ mode }}"

thermostat_set_mode_repeater:
  alias: Thermostat Set Mode Repeater
  mode: restart
  sequence:
    # Need to send the command a few times to ensure that thermostat changed it's mode
    - repeat:
        while:
          - condition: template
            value_template: "{{ not is_state('climate.thermostat', mode) }}"
          - condition: template
            # Repeat maximum 10 minutes
            value_template: "{{ repeat.index < 10*60/5 }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: climate.thermostat
            data:
              hvac_mode: "{{ mode }}"
          - delay: 00:00:05
