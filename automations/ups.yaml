######################################################################
# File: ups.yaml                                                     #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2022-11-28                                                   #
#                                                                    #
# Copyright (c) 2022 Sen Morgan                                      #
######################################################################

- alias: UPS Lost Grid Power Notification
  id: "ups_lost_grid_power_notification"
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.ups_status_data
      to: "OB DISCHRG"
  action:
    - service: persistent_notification.create
      data:
        title: "{{ 'üö®' }} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç UPS"
        message: >
          UPS –ø–æ—Ç–µ—Ä—è–ª –ø–∏—Ç–∞–Ω–∏–µ –≤ {{ states('sensor.time') }}
          –†–∞—Å—Å—á—ë—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {{ states('sensor.ups_battery_runtime') | int | timestamp_custom('%M:%S') }} –º–∏–Ω—É—Ç
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üö®' }} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç UPS"
        message: >
          UPS –ø–æ—Ç–µ—Ä—è–ª –ø–∏—Ç–∞–Ω–∏–µ –≤ {{ states('sensor.time') }}\n
          –†–∞—Å—Å—á—ë—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {{ states('sensor.ups_battery_runtime') | int | timestamp_custom('%M:%S') }} –º–∏–Ω—É—Ç

- alias: UPS Discharging Loop Notification
  id: "ups_discharging_loop_notification"
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.ups_status_data
      to: "OB DISCHRG"
  action:
    - delay: 00:00:10
    - repeat:
        while:
          - condition: state
            entity_id: sensor.ups_status_data
            state: "OB DISCHRG"
        sequence:
          - service: notify.mobile_app_sm_s901b
            data:
              title: "{{ 'üö®' }} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç UPS"
              message: >
                UPS –æ—Ç–∫–ª—é—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ {{ states('sensor.ups_battery_runtime') | int | timestamp_custom('%M:%S') }} –º–∏–Ω—É—Ç\n
                –ó–∞—Ä—è–¥ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞: {{ states('sensor.ups_battery_charge') }}%\n
                –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞: {{ states('sensor.ups_battery_voltage') }} –í\n
                –°—Ç–∞—Ç—É—Å: {{ states('sensor.ups_status') }}
          - delay: 00:02:00

- alias: UPS Low Battery Warning Notification
  id: "ups_low_battery_warning_notification"
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.ups_battery_charge
      below: 21
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üö®' }} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç UPS"
        message: >
          –ù–∏–∑–∫–∏–π –∑–∞—Ä—è–¥ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ UPS: {{ states('sensor.ups_battery_charge') }}%

- alias: UPS Shutdown Home Assistant Server
  id: "ups_shutdown_home_assistant_server"
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.ups_battery_charge
      below: 10
    - platform: numeric_state
      entity_id: sensor.ups_battery_runtime
      below: 300
    - platform: template
      value_template: "{{ 'OB DISCHRG LB' in states('sensor.ups_status_data') }}"
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üö®' }} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç UPS"
        message: >
          –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏ UPS\n
          –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ Home Assistant –≤ {{ states('sensor.time') }}
    - delay: 00:00:05
    - service: hassio.host_shutdown

- alias: UPS Lost Grid Power Light Notification
  id: "ups_lost_grid_power_light_notification"
  mode: single
  trigger:
    - platform: template
      value_template: "{{ 'OB' in states('sensor.ups_status_data') }}"
  action:
    - service: light.turn_on
      data:
        entity_id: light.tradfri_bulb
        brightness: 255
        effect: "breathe"

- alias: UPS Grid Power Restored Light Notification
  id: "ups_grid_power_restored_light_notification"
  mode: single
  trigger:
    - platform: template
      value_template: "{{ 'OL' in states('sensor.ups_status_data') }}"
  action:
    - service: light.turn_on
      data:
        entity_id: light.tradfri_bulb
        brightness: 255
    - wait_template: "{{ not ('OL' in states('sensor.ups_status_data')) }}"
      timeout: "00:00:10"
    - if:
        - condition: template
          value_template: "{{ 'OL' in states('sensor.ups_status_data') }}"
      then:
        - service: light.turn_off
          entity_id: light.tradfri_bulb
