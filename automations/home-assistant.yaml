######################################################################
# File: home-assistant.yaml                                          #
# Author: SenMorgan https://github.com/SenMorgan                     #
# Date: 2022-11-28                                                   #
#                                                                    #
# Info: this file contains automations that are associated to the    #
# Home Assistant system.                                             #
#                                                                    #
# Copyright (c) 2022 Sen Morgan                                      #
######################################################################

###############################################
## Notifications
###############################################
- id: "Notification_Home_Assistant_Started"
  alias: Notification Home Assistant Started
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'ℹ️' }} Системное уведомление"
        message: Home Assistant started at {{ states('sensor.time') }}

- id: "Notification_Home_Assistant_Stopped"
  alias: Notification Home Assistant Stopped
  trigger:
    - platform: event
      event_type: homeassistant_stop
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'ℹ️' }} Системное уведомление"
        message: Home Assistant stopped at {{ states('sensor.time') }}

- id: "Notification_New_Device_Connected"
  alias: Notification New Device Connected
  mode: queued
  trigger:
    platform: event
    event_type: entity_registry_updated
    event_data:
      action: create
  condition: >
    {{trigger.event.data.entity_id.startswith('device_tracker')}}
  action:
    - variables:
        entity: >
          {{trigger.event.data.entity_id}}
    - service: system_log.write
      data:
        message: >
          New device registrered: {{ entity }}
        level: warning
        logger: homeassistant.components.device_tracker
    - service: persistent_notification.create
      data:
        title: >
          New device registered: {{ entity }}
        message: >
          Entity: {{entity}}
          Host: {{state_attr(entity,'host_name')}}
          Ip: {{state_attr(entity,'ip')}}
          Mac-address: {{state_attr(entity,'mac')}}
          Full data: {{trigger.event.data}}
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'ℹ️' }} Системное уведомление"
        message: В сети появилось новое устройство {{ entity }}
    - service: media_player.play_media
      entity_id: media_player.yandex_station
      data:
        media_content_id: >
          К локальной сети было подключено новое устройство с именем {{ entity }}
        media_content_type: text

- id: "Notification_Home_Assistant_Update_Available"
  alias: Notification Home Assistant Update Available
  trigger:
    - platform: state
      entity_id: update.home_assistant_core_update
      from: "off"
      to: "on"
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'ℹ️' }} Системное уведомление"
        message: Update! Доступна новая версия {{ states('sensor.home_assistant_versions') }}
        data:
          actions:
            - action: "URI"
              title: "Open Config"
              uri: "/config"

###############################################
## Low Battery Notifications
###############################################
- id: "Create_Group_of_Battery_Devices"
  alias: Create Group of Battery Devices
  trigger:
    # Trigger on startup
    - platform: homeassistant
      event: start
    # Trigger every 2 hours by time_pattern
    - platform: time_pattern
      hours: "/2"
  action:
    - service: group.set
      data:
        object_id: battery_devices
        entities: >-
          {%-
            for state in states.sensor
              if is_state_attr(state.entity_id, 'device_class', 'battery') and
              (state.entity_id.endswith("_battery") or state.entity_id.endswith("_power"))
          %}
          {{ state.entity_id }}{%- if not loop.last -%}, {%- endif -%}
          {%- endfor %}

- id: "Notification_Low_Battery"
  alias: Notification Low Battery
  trigger:
    - platform: event
      event_type: state_changed
  condition:
    - condition: template
      value_template: >-
        {{ trigger.event.data.entity_id in (expand('group.battery_devices') | map(attribute='entity_id')) }}
    - condition: template
      value_template: >-
        {{ not trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
    - condition: template
      value_template: >-
        {{ (trigger.event.data.new_state.state | int) < 20 }}
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'ℹ️' }} Системное уведомление"
        message: |
          *Внимание, низкий заряд батареи!*
          {{ trigger.event.data.new_state.attributes.friendly_name }}: {{ trigger.event.data.new_state.state }}%!

###############################################
## Other Automations
###############################################

- alias: Power Off Home Assistant Action
  id: power_off_home_assistant_action
  trigger:
    - platform: state
      entity_id: input_button.power_off_home_assistant
  action:
    - service: script.turn_on
      entity_id: script.home_assistant_shutdown

- alias: Reboot Home Assistant Action
  id: reboot_home_assistant_action
  trigger:
    - platform: state
      entity_id: input_button.reboot_home_assistant
  action:
    - service: script.turn_on
      entity_id: script.home_assistant_reboot

- alias: Power Off Server Rack Action
  id: power_off_server_rack_action
  mode: restart
  trigger:
    - platform: state
      entity_id: input_button.power_off_server_rack
  action:
    # Check Synology Shutdown button state:
    - if:
        - condition: state
          entity_id: button.synology_ds220_shutdown
          state: "unavailable"
      # If Synology is unavailable, ask for the confirmation
      then:
        - variables:
            # Including an id in the action allows us to identify this script run
            # and not accidentally trigger for other notification actions
            action_power_off: "{{ 'action_power_off' ~ context.id }}"
            action_cancel: "{{ 'action_cancel' ~ context.id }}"
        - service: notify.mobile_app_sm_s901b
          data:
            title: "{{ '❗️' }} Внимание!"
            message: Synology DS220+ недоступен, продолжить выключение Home Assistant?
            data:
              actions:
                - action: "{{ action_power_off }}"
                  title: "Да"
                - action: "{{ action_cancel }}"
                  title: "Отмена"
        # Waiting for «action_power_off» or «action_cancel» avoids accidentally continuing
        # for another script/automation's notification action
        - wait_for_trigger:
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "{{ action_power_off }}"
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "{{ action_cancel }}"
        # Perform the action
        - choose:
            - conditions: "{{ wait.trigger.event.data.action == action_power_off }}"
              sequence:
                # Turn OFF Home Assistant
                - service: script.turn_on
                  entity_id: script.home_assistant_shutdown
            - conditions: "{{ wait.trigger.event.data.action == action_cancel }}"
              sequence:
                - service: notify.mobile_app_sm_s901b
                  data:
                    title: "{{ 'ℹ️' }} Системное уведомление"
                    message: Отмена выключения серверного шкафа
      else:
        - service: notify.mobile_app_sm_s901b
          data:
            title: "{{ 'ℹ️' }} Системное уведомление"
            message: Выключение серверного шкафа
        # Turn OFF the Synology DS220+
        - service: button.press
          entity_id: button.synology_ds220_shutdown
        - delay: 00:00:10
        # Turn OFF Home Assistant
        - service: script.turn_on
          entity_id: script.home_assistant_shutdown
