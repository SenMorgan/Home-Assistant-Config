###############################################
## Welcome and Hall Lights Automations
###############################################

- id: "hall_lights_and_alice_greeting"
  alias: Hall Lights and Alice Greeting
  mode: single
  trigger:
    - platform: state
      id: "SEN_CAME_HOME"
      entity_id: person.sen
      to: "home"
    - platform: state
      id: "KRIS_CAME_HOME"
      entity_id: person.kris
      to: "home"
  condition:
    - condition: time
      after: "6:00:00"
      before: "22:00:00"
  action:
    - wait_template: "{{ states('binary_sensor.hall_door_contact') == 'on' }}"
      timeout: 00:15:00
      continue_on_timeout: false
    - wait_template: "{{ states('binary_sensor.hall_door_contact') == 'off' }}"
      timeout: 00:10:00
      continue_on_timeout: false
    - choose:
        # Only Sen came home
        - conditions:
            - condition: trigger
              id: "SEN_CAME_HOME"
            # Check if Kris's state didn't changed after Sen's
            - condition: template
              value_template:
                "{{ ( as_timestamp(states.person.kris.last_changed, 0) | int(0) ) <
                ( as_timestamp(states.person.sen.last_changed, 0) | int(0) ) }}"
          sequence:
            - alias: "Switch on lights and welcome"
              choose:
                - conditions:
                    - condition: sun
                      after: sunset
                      before_offset: 00:15:00
                  sequence:
                    - service: light.turn_on
                      entity_id: light.string_lights
            # Do not notify via Yandex Station if it is in playing state
            - if:
                condition: template
                value_template: "{{ not is_state('media_player.yandex_station', 'playing') }}"
              then:
                - service: media_player.play_media
                  entity_id: media_player.yandex_station
                  data:
                    media_content_id: >
                      –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Ç–µ—Ä –ú–æ—Ä–≥–∞–Ω!
                    media_content_type: dialog
                    extra:
                      volume_level: 0.6
        # Only Kris came home
        - conditions:
            - condition: trigger
              id: "KRIS_CAME_HOME"
            # Check if Sen's state didn't changed after Kris's
            - condition: template
              value_template:
                "{{ ( as_timestamp(states.person.sen.last_changed, 0) | int(0) ) <
                ( as_timestamp(states.person.kris.last_changed, 0) | int(0) ) }}"
          sequence:
            # Do not notify via Yandex Station if it is in playing state
            - if:
                condition: template
                value_template: "{{ not is_state('media_player.yandex_station', 'playing') }}"
              then:
                - alias: "Only welcome"
                  service: media_player.play_media
                  entity_id: media_player.yandex_station
                  data:
                    media_content_id: >
                      –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Å–∏—Å –ú–æ—Ä–≥–∞–Ω
                    media_content_type: dialog
                    extra:
                      volume_level: 0.6
        # Bouth came home
        - conditions:
            - condition: state
              entity_id: person.sen
              state: "home"
            - condition: state
              entity_id: person.kris
              state: "home"
          sequence:
            - alias: "Switch on lights and welcome"
              choose:
                - conditions:
                    - condition: sun
                      after: sunset
                      before_offset: 00:15:00
                  sequence:
                    - service: light.turn_on
                      entity_id: light.string_lights
            # Do not notify via Yandex Station if it is in playing state
            - if:
                condition: template
                value_template: "{{ not is_state('media_player.yandex_station', 'playing') }}"
              then:
                - alias: "Welcome everybody"
                  service: media_player.play_media
                  entity_id: media_player.yandex_station
                  data:
                    media_content_id: >
                      –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π –º–∏—Å—Ç–µ—Ä –∏ –º–∏—Å—Å–∏—Å –ú–æ—Ä–≥–∞–Ω
                    media_content_type: dialog
                    extra:
                      volume_level: 0.6
      default:
        - service: notify.mobile_app_sm_s901b
          data:
            title: "{{ '‚ÑπÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
            message: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ —Å–º–æ–≥–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ç–æ –ø—Ä–∏—à–µ–ª - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥

- id: "home_all_lights_off"
  alias: Home All Lights OFF
  trigger:
    - platform: state
      entity_id: binary_sensor.hall_door_contact
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.people_home
      state: "on"
  action:
    - wait_template: "{{ states('binary_sensor.people_home') == 'off' }}"
      timeout: "00:30:00"
      continue_on_timeout: false
    - service: light.turn_off
      entity_id: all
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üëã' }} –î–æ —Å–≤–∏–¥–∞–Ω–∏—è"
        message: >
          {% if is_state('input_boolean.heating_season', 'on') %}
            –¢–µ—Ä–º–æ—Å—Ç–∞—Ç –∏ —Å–≤–µ—Ç –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
          {% else %}
            –í–µ—Å—å —Å–≤–µ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω
          {% endif %}

- id: "hall_lights_by_motion_on"
  alias: Hall Lights by Motion ON
  trigger:
    - platform: state
      entity_id: binary_sensor.hall_door_contact
      to: "on"
    - platform: state
      entity_id: binary_sensor.aqara_hall_motion_sensor_occupancy
      to: "on"
  condition:
    - condition: state
      entity_id: light.hall_lights
      state: "off"
  action:
    - service: light.turn_on
      entity_id: light.hall_lights
    - service: input_boolean.turn_on
      entity_id: input_boolean.flag_hall_lights_triggered_by_motion

- id: "hall_lights_by_motion_off"
  alias: Hall Lights by Motion OFF
  trigger:
    - platform: state
      entity_id: binary_sensor.aqara_hall_motion_sensor_occupancy
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.flag_hall_lights_triggered_by_motion
      state: "on"
  action:
    - service: light.turn_off
      entity_id: light.hall_lights
    - service: input_boolean.turn_off
      entity_id: input_boolean.flag_hall_lights_triggered_by_motion

###############################################
## Other Automatic Lights
###############################################

- id: "kitchen_asus_pc_background_lights_on"
  alias: Kitchen Asus PC Background Lights ON
  trigger:
    - platform: sun
      id: "SUNSET"
      event: sunset
      offset: -00:25:00
    - platform: state
      id: "PC_ON"
      entity_id: switch.asus_pc
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: person.sen
      state: "home"
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: trigger
              id: "SUNSET"
            - condition: state
              entity_id: switch.asus_pc
              state: "on"
        - condition: and
          conditions:
            - condition: trigger
              id: "PC_ON"
  #            - condition: sun
  #              after: sunset
  #              after_offset: -00:25:00
  action:
    - service: light.turn_on
      entity_id:
        - light.gyver_lamp
    - if:
        - condition: template
          value_template: >
            {{ states('person.kris') == 'home'}}
      then:
        - service: switch.turn_off
          entity_id:
            - switch.pc_backlight_sync_send
      else:
        - service: light.turn_on
          entity_id:
            - light.shelf_lighting
            - light.pc_backlight
        - service: switch.turn_on
          entity_id:
            - switch.pc_backlight_sync_send

- id: "kitchen_asus_pc_background_lights_off"
  alias: Kitchen Asus PC Background Lights OFF
  trigger:
    - platform: state
      entity_id: switch.asus_pc
      from: "on"
      to: "off"
  action:
    - service: light.turn_off
      entity_id:
        - light.gyver_lamp
        - light.shelf_lighting

- id: "kitchen_clock_on_if_people_home"
  alias: Kitchen Clock On if People Home
  trigger:
    platform: state
    entity_id: binary_sensor.people_home
    to: "on"
  action:
    - service: light.turn_on
      entity_id: light.7_seg_clock

- id: "living_room_bar_lights_by_sunset_or_tv_on"
  alias: Living Room Bar Lights by Sunset or TV ON
  trigger:
    - platform: sun
      id: "SUNSET"
      event: sunset
      offset: -00:15:00
    - platform: state
      id: "TV_ON"
      entity_id: media_player.tv
      to: "on"
  condition:
    - condition: state
      entity_id: person.sen
      state: "home"
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: trigger
              id: "SUNSET"
            - condition: state
              entity_id: media_player.tv
              state: "on"
        - condition: and
          conditions:
            - condition: trigger
              id: "TV_ON"
            - condition: sun
              after: sunset
              before_offset: 00:15:00
  action:
    - wait_template: >
        "{{ states('switch.asus_pc') == 'off' and
            states('light.mi_desk_lamp') == 'off' and
            states('light.kitchen_spotlights') == 'off' and
            states('light.bedroom_nightlight') == 'off' }}"
      timeout: 01:00:00
      continue_on_timeout: false
    # Check if it's still needed (TV is on)
    - if:
        - condition: state
          entity_id: media_player.tv
          state: "on"
      then:
        - service: scene.turn_on
          entity_id: scene.movies

- id: "living_room_bar_lights_by_sunrise_off"
  alias: Living Room Bar Lights by Sunrise OFF
  trigger:
    - platform: sun
      event: sunrise
      offset: -01:00:00
  action:
    - service: light.turn_off
      entity_id: light.bar_light

# Send me notification if switch.parking_light is turned off for more than 1 hour and turn it ON
- id: "parking_light_emergency_on"
  alias: Parking Light Emergency On
  trigger:
    - platform: state
      entity_id: switch.parking_light
      to: "off"
      for: 1:00:00
  action:
    - repeat:
        until:
          - condition: state
            entity_id: switch.parking_light
            state: "on"
        sequence:
          - service: switch.turn_on
            entity_id: switch.parking_light
          - service: notify.mobile_app_sm_s901b
            data:
              title: "{{ 'üöó' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
              message: –†–µ–ª–µ –æ—Å–≤–µ—â–µ–Ω–∏—è –ø–∞—Ä–∫–æ–≤–∫–∏ –±—ã–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –±–æ–ª–µ–µ —á–∞—Å–∞. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –≤ {{ states('sensor.time') }}
          - delay: 00:01:00

###############################################
## Cover Automations
###############################################

- id: "bedroom_blinds_by_sunset_close"
  alias: Bedroom Blinds by Sunset Close
  trigger:
    - platform: sun
      event: sunset
      offset: 00:20:00
  condition:
    - condition: state
      entity_id: cover.bedroom
      state: open
    # - condition: state
    #   entity_id: binary_sensor.bedroom_window_contact
    #   state: "off"
  action:
    - service: cover.close_cover
      entity_id: cover.bedroom

###############################################
## Notifications
###############################################

- id: "notification_kris_srrived"
  alias: Notification Kris Arrived
  trigger:
    - platform: state
      entity_id: person.kris
      to: "home"
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üë©‚Äçü¶∞' }} –°–µ–º–µ–π–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –ö—Ä–∏—Å—Ç–∏–Ω–∞ –ø—Ä–∏—à–ª–∞ –¥–æ–º–æ–π –≤ {{ states('sensor.time') }}
    - if:
        - condition: template
          value_template: "{{ is_state('person.sen', 'home') }}"
      then:
        - service: script.turn_on
          entity_id: script.notify_via_kitchen_spotlights
        - if:
            - condition: state
              entity_id: switch.asus_pc
              state: "on"
          then:
            - service: select.select_option
              target:
                entity_id: select.pc_backlight_preset
              data:
                option: "Alarm"
            - delay: 00:00:10
            - service: select.select_option
              target:
                entity_id: select.pc_backlight_preset
              data:
                option: "Gender"

- id: "notification_kris_leaved"
  alias: Notification Kris Leaved
  trigger:
    - platform: state
      entity_id: person.kris
      from: "home"
      to: "not_home"
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üë©‚Äçü¶∞' }} –°–µ–º–µ–π–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –ö—Ä–∏—Å—Ç–∏–Ω–∞ —É—à–ª–∞ –≤ {{ states('sensor.time') }}

- id: "notification_kris_is_near_me"
  alias: Notification Kris Is Near Me
  mode: single
  trigger:
    - platform: numeric_state
      entity_id: sensor.distance_between_kris_and_sen
      below: 200
  condition:
    - condition: template
      value_template: "{{ not states('person.kris') == 'home' }}"
      # Check if last notification was fired more than 30 minutes ago
    - condition: template
      value_template: >
        {{ now() - state_attr('automation.notification_kris_is_near_me', 'last_triggered') > timedelta(minutes=5) }}
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üë©‚Äçü¶∞' }} –°–µ–º–µ–π–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –ö—Ä–∏—Å—Ç–∏–Ω–∞ –≤ {{ states('sensor.distance_between_kris_and_sen') }} –º–µ—Ç—Ä–∞—Ö –æ—Ç –í–∞—Å –≤ {{ states('sensor.time') }}

- id: "notification_snow"
  alias: Notification Snow
  trigger:
    - platform: numeric_state
      entity_id: sensor.openweathermap_snow
      above: 0
  action:
    - service: notify.mobile_app_sm_s901b
      data_template:
        title: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω–µ–≥–µ
        message: –î–æ–ª–∂–Ω–æ –≤—ã–ø–∞—Å—Ç—å {{ states('sensor.openweathermap_snow') }} –º–º —Å–Ω–µ–≥–∞

- id: "notification_door_opened"
  alias: Notification Door Opened
  trigger:
    - platform: state
      entity_id: binary_sensor.hall_door_contact
      to: "on"
  condition:
    - condition: template
      value_template: >
        {{ not states('person.sen') == 'home'}}
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ '‚ÑπÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –í—Ö–æ–¥–Ω–∞—è –¥–≤–µ—Ä—å –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –≤ {{ states('sensor.time') }}

- id: "notification_gas_leakage_detected"
  alias: Notification Gas Leakage Detected
  trigger:
    - platform: state
      entity_id: binary_sensor.co_and_natural_gas_alarm_gas
      to: "on"
  action:
    - repeat:
        while:
          - condition: state
            entity_id: binary_sensor.co_and_natural_gas_alarm_gas
            state: "on"
        sequence:
          - service: notify.mobile_app_sm_s901b
            data:
              title: "{{ 'üö®' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
              message: >
                –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —É—Ç–µ—á–∫–∞ –≥–∞–∑–∞ –≤ {{ states('sensor.time') }}
                –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≥–∞–∑–∞: {{ states('sensor.co_and_natural_gas_alarm_gas') }} ppm
              data:
                ttl: 0
                priority: urgent
                channel: alarm_stream
                importance: high
                persistent: true
                tag: "persistent"
          - delay: 00:00:10

- id: "notification_carbon_monoxide_detected"
  alias: Notification Carbon Monoxide Detected
  trigger:
    - platform: state
      entity_id: binary_sensor.co_and_natural_gas_alarm_carbon_monoxide
      to: "on"
  action:
    - repeat:
        while:
          - condition: state
            entity_id: binary_sensor.co_and_natural_gas_alarm_carbon_monoxide
            state: "on"
        sequence:
          - service: notify.mobile_app_sm_s901b
            data:
              title: "{{ 'üö®' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
              message: >
                –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —É–≥–∞—Ä–Ω–æ–≥–æ –≥–∞–∑–∞ –≤ {{ states('sensor.time') }}
                –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≥–∞–∑–∞: {{ states('sensor.co_and_natural_gas_alarm_carbon_monoxide') }} ppm
          - delay: 00:00:10

- id: "notification_ads_b_receiver_disconnected"
  alias: Notification ADS-B Receiver Disconnected
  trigger:
    - platform: state
      entity_id: binary_sensor.fr24_feeder_receiver_connected
      from: "on"
      to: "off"
      for: "00:05:00"
  action:
    - variables:
        timestamp: "{{ trigger.to_state.last_changed.astimezone(now().tzinfo).strftime('%H:%M:%S') }}"
    - service: persistent_notification.create
      data:
        title: "{{ '‚ùóÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        # Use here the timestamp when the automation was triggered
        message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞ –≤ {{ timestamp }}
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ '‚ùóÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞ –≤ {{ timestamp }}
    - service: automation.turn_on
      entity_id: automation.notification_ads_b_receiver_connection_restored

- id: "notification_ads_b_receiver_connection_restored"
  alias: Notification ADS-B Receiver Connection Restored
  trigger:
    - platform: state
      entity_id: binary_sensor.fr24_feeder_receiver_connected
      from: "off"
      to: "on"
      for: "00:01:00"
  action:
    - variables:
        timestamp: "{{ trigger.to_state.last_changed.astimezone(now().tzinfo).strftime('%H:%M:%S') }}"
    - service: persistent_notification.create
      data:
        title: "{{ '‚ÑπÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ {{ timestamp }}
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ '‚ÑπÔ∏è' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        message: –°–≤—è–∑—å —Å ADS-B –ø—Ä–∏—ë–º–Ω–∏–∫–æ–º –±—ã–ª–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ {{ timestamp }}
    - service: automation.turn_off
      entity_id: automation.notification_ads_b_receiver_connection_restored

- id: "notification_diesel_price_changed"
  alias: Notification Diesel Price Changed
  trigger:
    - platform: state
      entity_id: sensor.diesel_price_ono
  condition:
    - condition: template
      value_template: >
        {{ trigger.from_state.state != trigger.to_state.state }}
    - condition: template
      value_template: >
        {{ is_number(trigger.from_state.state) and is_number(trigger.to_state.state) }}
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üöó' }} –¶–µ–Ω–∞ —Ç–æ–ø–ª–∏–≤–∞"
        message: >
          –¶–µ–Ω–∞ –¥–∏–∑–µ–ª—è {{ '—É–ø–∞–ª–∞' if trigger.from_state.state | float(0) > trigger.to_state.state | float(0) else '–≤–æ–∑—Ä–∞—Å–ª–∞' }}
          —Å {{ trigger.from_state.state }} –¥–æ {{ trigger.to_state.state }} Kƒç/L

- id: "notification_aircraft_detected"
  alias: Notification Aircraft Detected
  trigger:
    - platform: state
      entity_id: sensor.fr24_aircraft
  condition:
    - condition: template
      value_template: !secret AIRCRAFTS_TO_TRACK_CONDITION_TEMPLATE
      # Do not forget to add this line to secrets.yaml file and replace OK*** with your aircraft registration number:
      # AIRCRAFTS_TO_TRACK_CONDITION_TEMPLATE: {{ state_attr('sensor.fr24_aircraft', 'aircraft') | regex_search('OK***|OK***') }}
    - condition: template
      value_template: >
        {{ now() - state_attr('automation.notification_aircraft_detected', 'last_triggered') > timedelta(minutes=5) }}
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ '‚úàÔ∏è' }} –ü—Ä–æ–ª–µ—Ç–∞–µ—Ç –∑–Ω–∞–∫–æ–º—ã–π —Å–∞–º–æ–ª—ë—Ç"
        message: !secret AIRCRAFTS_TO_TRACK_MESSAGE_TEMPLATE

        # There is no other way to hide aircrafts registration number from code in secrets.yaml and use it in template,
        # so I have to save all code in the secrets.yaml file:
        # AIRCRAFTS_TO_TRACK_MESSAGE_TEMPLATE: |
        # {% set aircraft = namespace(flight='', alt_baro='', gs='') %}
        # {% set aircrafts_list = state_attr('sensor.fr24_aircraft', 'aircraft') %}
        # {% for element in aircrafts_list if element | regex_search('OK***|OK***') %} # DO NOT FORGET TO CHANGE AIRCRAFTS REGISTRATION NUMBER
        #         {% set aircraft.flight = element['flight'] %}
        #         {% set aircraft.alt = (((element['alt_baro'] | float(0)) * 0.3048) | int(0)) | string %}
        #         {% set aircraft.gs = (((element['gs'] | float(0)) * 1.852) | int(0)) | string %}
        # {% endfor %}
        # {% if aircraft.flight == '' %}
        #         {{ '–î–∞–Ω–Ω—ã–µ –æ —Å–∞–º–æ–ª—ë—Ç–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã' }}
        # {% else %}
        #         {{ '–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞: ' + aircraft.flight }}
        #         {{ '–í—ã—Å–æ—Ç–∞: ' + aircraft.alt + ' –º' }}
        #         {{ '–°–∫–æ—Ä–æ—Å—Ç—å: ' + aircraft.gs + ' –∫–º/—á' }}
        # {% endif %}

- id: "notification_solar_panel_power_above_threshold"
  alias: Notification Solar Panel Power Above Threshold
  trigger:
    - platform: numeric_state
      entity_id: sensor.solar_panel_power
      above: 45
  action:
    - service: notify.mobile_app_sm_s901b
      data:
        title: "{{ 'üåû' }} –°–æ–ª–Ω–µ—á–Ω–∞—è –ø–∞–Ω–µ–ª—å"
        message: "–ú–æ—â–Ω–æ—Å—Ç—å –≤—ã—à–µ –ø–æ—Ä–æ–≥–∞: {{ states('sensor.solar_panel_power') }} W"

###############################################
## Media Players Control
###############################################

- id: "living_room_tv_by_wol_on"
  alias: Living Room TV by WoL ON
  mode: restart
  trigger:
    - platform: webostv.turn_on
      entity_id: media_player.tv
  action:
    - service: script.turn_on
      entity_id: script.wake_tv

###############################################
## Other Buttons and Switches Handles
###############################################

- id: "parking_lights_on"
  alias: Parking Lights ON
  mode: queued
  trigger:
    - platform: state
      entity_id: input_button.parking_light
  action:
    - service: script.turn_on
      target:
        entity_id: script.switch_on_parking_light

- id: "kitchen_presentation_on"
  alias: Kitchen Presentation ON
  trigger:
    - platform: state
      entity_id: input_boolean.presentation_switch
      to: "on"
  condition:
    - condition: state
      entity_id: script.presentation
      state: "off"
  action:
    - service: script.turn_on
      target:
        entity_id: script.presentation
    - service: input_boolean.turn_off
      entity_id: input_boolean.presentation_switch

###############################################
## Yandex Alice Automations
###############################################

- id: "sync_shopping_list"
  alias: Sync Shopping List
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.people_home
  action:
    # Save actual volume
    - service: input_number.set_value
      target:
        entity_id: input_number.volume_yandex_station
      data:
        value: "{{ state_attr('media_player.yandex_station', 'volume_level')}}"
    # Repeat the command to ensure that the volume is muted
    - repeat:
        while:
          - condition: template
            value_template: "{{ not is_state_attr('media_player.yandex_station', 'volume_level', 0.01) }}"
          - condition: template
            value_template: "{{ repeat.index <= 3 }}"
        sequence:
          - service: media_player.volume_set
            data:
              entity_id: media_player.yandex_station
              volume_level: 0.01
          - delay: 0.5
    - service: script.turn_on
      entity_id: script.update_shopping_list
    - delay: 1
    - service: media_player.play_media
      entity_id: media_player.yandex_station
      data:
        media_content_id: stop
        media_content_type: command
    - delay: 1
    # Repeat the command to ensure that the volume is muted
    - repeat:
        while:
          - condition: template
            value_template: "{{ not is_state_attr('media_player.yandex_station', 'volume_level', states('input_number.volume_yandex_station')) }}"
          - condition: template
            value_template: "{{ repeat.index <= 3 }}"
        sequence:
          - service: media_player.volume_set
            data:
              entity_id: media_player.yandex_station
              volume_level: "{{ states('input_number.volume_yandex_station')}}"
          - delay: 1

- id: "home_enable_night_mode_by_bedroom_door"
  alias: Home Enable Night Mode by Bedroom Door
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door_contact
      from: "on"
      to: "off"
      for: 00:00:30
    - platform: time
      at: "21:00:00"
  condition:
    - condition: time
      after: "20:00:00"
      before: "03:00:00"
      # Don not check here ¬´input_boolean.home_night_mode¬ª state, because
      # we need to ensure that the night mode will be turned ON at 21:00
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.home_night_mode

- id: "kitchen_yandex_volume_increased_trigger"
  alias: Kitchen Yandex Volume Increased Trigger
  mode: single
  trigger:
    - platform: state
      entity_id: media_player.yandex_station
  condition:
    - condition: state
      entity_id: input_boolean.home_night_mode
      state: "on"
    - condition: template
      value_template: >
        {% set from = trigger.from_state.attributes.volume_level | float(0) %}
        {% set to = trigger.to_state.attributes.volume_level | float(0) %}
        {{ to > from }}
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.home_night_mode

- id: "home_disable_night_mode_by_trigger"
  alias: Home Disable Night Mode by Trigger
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door_contact
      from: "off"
      to: "on"
      for: 00:00:30
    - platform: time
      at: "09:00:00"
    - platform: state
      entity_id: cover.bedroom
      to: "open"
  condition:
    - condition: state
      entity_id: input_boolean.home_night_mode
      state: "on"
    - condition: time
      after: "06:00:00"
      before: "12:00:00"
    - condition: state
      entity_id: binary_sensor.bedroom_door_contact
      state: "on"
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.home_night_mode

- id: "home_night_mode_on"
  alias: Home Night Mode ON
  mode: single
  trigger:
    - platform: state
      entity_id: input_boolean.home_night_mode
      from: "off"
      to: "on"
  action:
    service: script.turn_on
    entity_id: script.home_night_mode

- id: "home_night_mode_off"
  alias: Home Night Mode OFF
  mode: single
  trigger:
    - platform: state
      entity_id: input_boolean.home_night_mode
      from: "on"
      to: "off"
  action:
    service: script.turn_on
    entity_id: script.home_day_mode

# Reduce Yandex Station volume if door was closed and restore if opened during the day time
- id: "kitchen_yandex_reduce_volume_if_bedroom_door_closed"
  alias: Kitchen Yandex Reduce Volume If Bedroom Door Closed
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door_contact
      from: "on"
      to: "off"
      for: 00:00:30
  condition:
    - condition: state
      entity_id: input_boolean.home_night_mode
      state: "off"
  action:
    - repeat:
        while:
          - condition: template
            value_template: "{{ not is_state_attr('media_player.yandex_station', 'volume_level', 0.2) }}"
          - condition: template
            value_template: "{{ repeat.index <= 3 }}"
        sequence:
          - service: media_player.volume_set
            data:
              entity_id: media_player.yandex_station
              volume_level: 0.2
          - delay: 1

- id: "kitchen_yandex_restore_volume_if_bedroom_door_opened"
  alias: Kitchen Yandex Restore Volume If Bedroom Door Opened
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_door_contact
      from: "off"
      to: "on"
      for: 00:00:30
  condition:
    - condition: state
      entity_id: input_boolean.home_night_mode
      state: "off"
  action:
    - repeat:
        while:
          - condition: template
            value_template: "{{ not is_state_attr('media_player.yandex_station', 'volume_level', 0.6) }}"
          - condition: template
            value_template: "{{ repeat.index <= 3 }}"
        sequence:
          - service: media_player.volume_set
            data:
              entity_id: media_player.yandex_station
              volume_level: 0.6
          - delay: 1

###############################################
## Gas Meter by Aqara door sensor and counter
###############################################

- id: "gas_counting"
  alias: Gas Counting
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window_contact
      from: "off"
      to: "on"
  action:
    - service: counter.increment
      target:
        entity_id: counter.gas_counter
  mode: single

###############################################
## Other Automatations
###############################################

- id: "power_monitor_crossed_low_threshold_notification"
  alias: Power Monitor Crossed Low Threshold Notification
  trigger:
    - platform: numeric_state
      entity_id: sensor.power_monitor_voltage
      below: input_number.power_monitor_low_voltage_threshold
  action:
    - repeat:
        while:
          - condition: numeric_state
            entity_id: sensor.power_monitor_voltage
            below: input_number.power_monitor_low_voltage_threshold
        sequence:
          - service: notify.mobile_app_sm_s901b
            data:
              title: "{{ 'üö®' }} –ú–æ–Ω–∏—Ç–æ—Ä –ø–∏—Ç–∞–Ω–∏—è"
              message: "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∏–∂–µ –ø–æ—Ä–æ–≥–∞: {{ states('sensor.power_monitor_voltage') }} V"
          - delay: 00:05:00

- id: "busy_wall_switch_1"
  alias: Busy Wall Switch 1
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.air_quality_station_digital_input_1
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.air_quality_station_digital_input_1
      from: "on"
      to: "off"
  action:
    - service: light.toggle
      entity_id: light.living_room_ceiling_light

- id: "busy_wall_switch_2"
  alias: Busy Wall Switch 2
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.air_quality_station_digital_input_2
      from: "off"
      to: "on"
    - platform: state
      entity_id: binary_sensor.air_quality_station_digital_input_2
      from: "on"
      to: "off"
  action:
    - service: light.toggle
      entity_id: light.floor_lamp
